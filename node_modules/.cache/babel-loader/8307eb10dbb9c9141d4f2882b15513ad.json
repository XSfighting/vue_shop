{"ast":null,"code":"import { isArray, isObject } from '../core/util.js';\nimport { createElement, createVNode, XMLNS, XML_NAMESPACE, XLINKNS } from './core.js';\nimport * as api from './domapi.js';\nvar colonChar = 58;\nvar xChar = 120;\nvar emptyNode = createVNode('', '');\n\nfunction isUndef(s) {\n  return s === undefined;\n}\n\nfunction isDef(s) {\n  return s !== undefined;\n}\n\nfunction createKeyToOldIdx(children, beginIdx, endIdx) {\n  var map = {};\n\n  for (var i = beginIdx; i <= endIdx; ++i) {\n    var key = children[i].key;\n\n    if (key !== undefined) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (map[key] != null) {}\n      }\n\n      map[key] = i;\n    }\n  }\n\n  return map;\n}\n\nfunction sameVnode(vnode1, vnode2) {\n  var isSameKey = vnode1.key === vnode2.key;\n  var isSameTag = vnode1.tag === vnode2.tag;\n  return isSameTag && isSameKey;\n}\n\nfunction createElm(vnode) {\n  var i;\n  var children = vnode.children;\n  var tag = vnode.tag;\n\n  if (isDef(tag)) {\n    var elm = vnode.elm = createElement(tag);\n    updateAttrs(emptyNode, vnode);\n\n    if (isArray(children)) {\n      for (i = 0; i < children.length; ++i) {\n        var ch = children[i];\n\n        if (ch != null) {\n          api.appendChild(elm, createElm(ch));\n        }\n      }\n    } else if (isDef(vnode.text) && !isObject(vnode.text)) {\n      api.appendChild(elm, api.createTextNode(vnode.text));\n    }\n  } else {\n    vnode.elm = api.createTextNode(vnode.text);\n  }\n\n  return vnode.elm;\n}\n\nfunction addVnodes(parentElm, before, vnodes, startIdx, endIdx) {\n  for (; startIdx <= endIdx; ++startIdx) {\n    var ch = vnodes[startIdx];\n\n    if (ch != null) {\n      api.insertBefore(parentElm, createElm(ch), before);\n    }\n  }\n}\n\nfunction removeVnodes(parentElm, vnodes, startIdx, endIdx) {\n  for (; startIdx <= endIdx; ++startIdx) {\n    var ch = vnodes[startIdx];\n\n    if (ch != null) {\n      if (isDef(ch.tag)) {\n        var parent_1 = api.parentNode(ch.elm);\n        api.removeChild(parent_1, ch.elm);\n      } else {\n        api.removeChild(parentElm, ch.elm);\n      }\n    }\n  }\n}\n\nexport function updateAttrs(oldVnode, vnode) {\n  var key;\n  var elm = vnode.elm;\n  var oldAttrs = oldVnode && oldVnode.attrs || {};\n  var attrs = vnode.attrs || {};\n\n  if (oldAttrs === attrs) {\n    return;\n  }\n\n  for (key in attrs) {\n    var cur = attrs[key];\n    var old = oldAttrs[key];\n\n    if (old !== cur) {\n      if (cur === true) {\n        elm.setAttribute(key, '');\n      } else if (cur === false) {\n        elm.removeAttribute(key);\n      } else {\n        if (key.charCodeAt(0) !== xChar) {\n          elm.setAttribute(key, cur);\n        } else if (key === 'xmlns:xlink' || key === 'xmlns') {\n          elm.setAttributeNS(XMLNS, key, cur);\n        } else if (key.charCodeAt(3) === colonChar) {\n          elm.setAttributeNS(XML_NAMESPACE, key, cur);\n        } else if (key.charCodeAt(5) === colonChar) {\n          elm.setAttributeNS(XLINKNS, key, cur);\n        } else {\n          elm.setAttribute(key, cur);\n        }\n      }\n    }\n  }\n\n  for (key in oldAttrs) {\n    if (!(key in attrs)) {\n      elm.removeAttribute(key);\n    }\n  }\n}\n\nfunction updateChildren(parentElm, oldCh, newCh) {\n  var oldStartIdx = 0;\n  var newStartIdx = 0;\n  var oldEndIdx = oldCh.length - 1;\n  var oldStartVnode = oldCh[0];\n  var oldEndVnode = oldCh[oldEndIdx];\n  var newEndIdx = newCh.length - 1;\n  var newStartVnode = newCh[0];\n  var newEndVnode = newCh[newEndIdx];\n  var oldKeyToIdx;\n  var idxInOld;\n  var elmToMove;\n  var before;\n\n  while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n    if (oldStartVnode == null) {\n      oldStartVnode = oldCh[++oldStartIdx];\n    } else if (oldEndVnode == null) {\n      oldEndVnode = oldCh[--oldEndIdx];\n    } else if (newStartVnode == null) {\n      newStartVnode = newCh[++newStartIdx];\n    } else if (newEndVnode == null) {\n      newEndVnode = newCh[--newEndIdx];\n    } else if (sameVnode(oldStartVnode, newStartVnode)) {\n      patchVnode(oldStartVnode, newStartVnode);\n      oldStartVnode = oldCh[++oldStartIdx];\n      newStartVnode = newCh[++newStartIdx];\n    } else if (sameVnode(oldEndVnode, newEndVnode)) {\n      patchVnode(oldEndVnode, newEndVnode);\n      oldEndVnode = oldCh[--oldEndIdx];\n      newEndVnode = newCh[--newEndIdx];\n    } else if (sameVnode(oldStartVnode, newEndVnode)) {\n      patchVnode(oldStartVnode, newEndVnode);\n      api.insertBefore(parentElm, oldStartVnode.elm, api.nextSibling(oldEndVnode.elm));\n      oldStartVnode = oldCh[++oldStartIdx];\n      newEndVnode = newCh[--newEndIdx];\n    } else if (sameVnode(oldEndVnode, newStartVnode)) {\n      patchVnode(oldEndVnode, newStartVnode);\n      api.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\n      oldEndVnode = oldCh[--oldEndIdx];\n      newStartVnode = newCh[++newStartIdx];\n    } else {\n      if (isUndef(oldKeyToIdx)) {\n        oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx);\n      }\n\n      idxInOld = oldKeyToIdx[newStartVnode.key];\n\n      if (isUndef(idxInOld)) {\n        api.insertBefore(parentElm, createElm(newStartVnode), oldStartVnode.elm);\n      } else {\n        elmToMove = oldCh[idxInOld];\n\n        if (elmToMove.tag !== newStartVnode.tag) {\n          api.insertBefore(parentElm, createElm(newStartVnode), oldStartVnode.elm);\n        } else {\n          patchVnode(elmToMove, newStartVnode);\n          oldCh[idxInOld] = undefined;\n          api.insertBefore(parentElm, elmToMove.elm, oldStartVnode.elm);\n        }\n      }\n\n      newStartVnode = newCh[++newStartIdx];\n    }\n  }\n\n  if (oldStartIdx <= oldEndIdx || newStartIdx <= newEndIdx) {\n    if (oldStartIdx > oldEndIdx) {\n      before = newCh[newEndIdx + 1] == null ? null : newCh[newEndIdx + 1].elm;\n      addVnodes(parentElm, before, newCh, newStartIdx, newEndIdx);\n    } else {\n      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);\n    }\n  }\n}\n\nfunction patchVnode(oldVnode, vnode) {\n  var elm = vnode.elm = oldVnode.elm;\n  var oldCh = oldVnode.children;\n  var ch = vnode.children;\n\n  if (oldVnode === vnode) {\n    return;\n  }\n\n  updateAttrs(oldVnode, vnode);\n\n  if (isUndef(vnode.text)) {\n    if (isDef(oldCh) && isDef(ch)) {\n      if (oldCh !== ch) {\n        updateChildren(elm, oldCh, ch);\n      }\n    } else if (isDef(ch)) {\n      if (isDef(oldVnode.text)) {\n        api.setTextContent(elm, '');\n      }\n\n      addVnodes(elm, null, ch, 0, ch.length - 1);\n    } else if (isDef(oldCh)) {\n      removeVnodes(elm, oldCh, 0, oldCh.length - 1);\n    } else if (isDef(oldVnode.text)) {\n      api.setTextContent(elm, '');\n    }\n  } else if (oldVnode.text !== vnode.text) {\n    if (isDef(oldCh)) {\n      removeVnodes(elm, oldCh, 0, oldCh.length - 1);\n    }\n\n    api.setTextContent(elm, vnode.text);\n  }\n}\n\nexport default function patch(oldVnode, vnode) {\n  if (sameVnode(oldVnode, vnode)) {\n    patchVnode(oldVnode, vnode);\n  } else {\n    var elm = oldVnode.elm;\n    var parent_2 = api.parentNode(elm);\n    createElm(vnode);\n\n    if (parent_2 !== null) {\n      api.insertBefore(parent_2, vnode.elm, api.nextSibling(elm));\n      removeVnodes(parent_2, [oldVnode], 0, 0);\n    }\n  }\n\n  return vnode;\n}","map":{"version":3,"names":["isArray","isObject","createElement","createVNode","XMLNS","XML_NAMESPACE","XLINKNS","api","colonChar","xChar","emptyNode","isUndef","s","undefined","isDef","createKeyToOldIdx","children","beginIdx","endIdx","map","i","key","process","env","NODE_ENV","sameVnode","vnode1","vnode2","isSameKey","isSameTag","tag","createElm","vnode","elm","updateAttrs","length","ch","appendChild","text","createTextNode","addVnodes","parentElm","before","vnodes","startIdx","insertBefore","removeVnodes","parent_1","parentNode","removeChild","oldVnode","oldAttrs","attrs","cur","old","setAttribute","removeAttribute","charCodeAt","setAttributeNS","updateChildren","oldCh","newCh","oldStartIdx","newStartIdx","oldEndIdx","oldStartVnode","oldEndVnode","newEndIdx","newStartVnode","newEndVnode","oldKeyToIdx","idxInOld","elmToMove","patchVnode","nextSibling","setTextContent","patch","parent_2"],"sources":["C:/Users/13203/Desktop/后台管理系统/vue_shop2/node_modules/zrender/lib/svg/patch.js"],"sourcesContent":["import { isArray, isObject } from '../core/util.js';\nimport { createElement, createVNode, XMLNS, XML_NAMESPACE, XLINKNS } from './core.js';\nimport * as api from './domapi.js';\nvar colonChar = 58;\nvar xChar = 120;\nvar emptyNode = createVNode('', '');\nfunction isUndef(s) {\n    return s === undefined;\n}\nfunction isDef(s) {\n    return s !== undefined;\n}\nfunction createKeyToOldIdx(children, beginIdx, endIdx) {\n    var map = {};\n    for (var i = beginIdx; i <= endIdx; ++i) {\n        var key = children[i].key;\n        if (key !== undefined) {\n            if (process.env.NODE_ENV !== 'production') {\n                if (map[key] != null) {\n                    console.error(\"Duplicate key \" + key);\n                }\n            }\n            map[key] = i;\n        }\n    }\n    return map;\n}\nfunction sameVnode(vnode1, vnode2) {\n    var isSameKey = vnode1.key === vnode2.key;\n    var isSameTag = vnode1.tag === vnode2.tag;\n    return isSameTag && isSameKey;\n}\nfunction createElm(vnode) {\n    var i;\n    var children = vnode.children;\n    var tag = vnode.tag;\n    if (isDef(tag)) {\n        var elm = (vnode.elm = createElement(tag));\n        updateAttrs(emptyNode, vnode);\n        if (isArray(children)) {\n            for (i = 0; i < children.length; ++i) {\n                var ch = children[i];\n                if (ch != null) {\n                    api.appendChild(elm, createElm(ch));\n                }\n            }\n        }\n        else if (isDef(vnode.text) && !isObject(vnode.text)) {\n            api.appendChild(elm, api.createTextNode(vnode.text));\n        }\n    }\n    else {\n        vnode.elm = api.createTextNode(vnode.text);\n    }\n    return vnode.elm;\n}\nfunction addVnodes(parentElm, before, vnodes, startIdx, endIdx) {\n    for (; startIdx <= endIdx; ++startIdx) {\n        var ch = vnodes[startIdx];\n        if (ch != null) {\n            api.insertBefore(parentElm, createElm(ch), before);\n        }\n    }\n}\nfunction removeVnodes(parentElm, vnodes, startIdx, endIdx) {\n    for (; startIdx <= endIdx; ++startIdx) {\n        var ch = vnodes[startIdx];\n        if (ch != null) {\n            if (isDef(ch.tag)) {\n                var parent_1 = api.parentNode(ch.elm);\n                api.removeChild(parent_1, ch.elm);\n            }\n            else {\n                api.removeChild(parentElm, ch.elm);\n            }\n        }\n    }\n}\nexport function updateAttrs(oldVnode, vnode) {\n    var key;\n    var elm = vnode.elm;\n    var oldAttrs = oldVnode && oldVnode.attrs || {};\n    var attrs = vnode.attrs || {};\n    if (oldAttrs === attrs) {\n        return;\n    }\n    for (key in attrs) {\n        var cur = attrs[key];\n        var old = oldAttrs[key];\n        if (old !== cur) {\n            if (cur === true) {\n                elm.setAttribute(key, '');\n            }\n            else if (cur === false) {\n                elm.removeAttribute(key);\n            }\n            else {\n                if (key.charCodeAt(0) !== xChar) {\n                    elm.setAttribute(key, cur);\n                }\n                else if (key === 'xmlns:xlink' || key === 'xmlns') {\n                    elm.setAttributeNS(XMLNS, key, cur);\n                }\n                else if (key.charCodeAt(3) === colonChar) {\n                    elm.setAttributeNS(XML_NAMESPACE, key, cur);\n                }\n                else if (key.charCodeAt(5) === colonChar) {\n                    elm.setAttributeNS(XLINKNS, key, cur);\n                }\n                else {\n                    elm.setAttribute(key, cur);\n                }\n            }\n        }\n    }\n    for (key in oldAttrs) {\n        if (!(key in attrs)) {\n            elm.removeAttribute(key);\n        }\n    }\n}\nfunction updateChildren(parentElm, oldCh, newCh) {\n    var oldStartIdx = 0;\n    var newStartIdx = 0;\n    var oldEndIdx = oldCh.length - 1;\n    var oldStartVnode = oldCh[0];\n    var oldEndVnode = oldCh[oldEndIdx];\n    var newEndIdx = newCh.length - 1;\n    var newStartVnode = newCh[0];\n    var newEndVnode = newCh[newEndIdx];\n    var oldKeyToIdx;\n    var idxInOld;\n    var elmToMove;\n    var before;\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n        if (oldStartVnode == null) {\n            oldStartVnode = oldCh[++oldStartIdx];\n        }\n        else if (oldEndVnode == null) {\n            oldEndVnode = oldCh[--oldEndIdx];\n        }\n        else if (newStartVnode == null) {\n            newStartVnode = newCh[++newStartIdx];\n        }\n        else if (newEndVnode == null) {\n            newEndVnode = newCh[--newEndIdx];\n        }\n        else if (sameVnode(oldStartVnode, newStartVnode)) {\n            patchVnode(oldStartVnode, newStartVnode);\n            oldStartVnode = oldCh[++oldStartIdx];\n            newStartVnode = newCh[++newStartIdx];\n        }\n        else if (sameVnode(oldEndVnode, newEndVnode)) {\n            patchVnode(oldEndVnode, newEndVnode);\n            oldEndVnode = oldCh[--oldEndIdx];\n            newEndVnode = newCh[--newEndIdx];\n        }\n        else if (sameVnode(oldStartVnode, newEndVnode)) {\n            patchVnode(oldStartVnode, newEndVnode);\n            api.insertBefore(parentElm, oldStartVnode.elm, api.nextSibling(oldEndVnode.elm));\n            oldStartVnode = oldCh[++oldStartIdx];\n            newEndVnode = newCh[--newEndIdx];\n        }\n        else if (sameVnode(oldEndVnode, newStartVnode)) {\n            patchVnode(oldEndVnode, newStartVnode);\n            api.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\n            oldEndVnode = oldCh[--oldEndIdx];\n            newStartVnode = newCh[++newStartIdx];\n        }\n        else {\n            if (isUndef(oldKeyToIdx)) {\n                oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx);\n            }\n            idxInOld = oldKeyToIdx[newStartVnode.key];\n            if (isUndef(idxInOld)) {\n                api.insertBefore(parentElm, createElm(newStartVnode), oldStartVnode.elm);\n            }\n            else {\n                elmToMove = oldCh[idxInOld];\n                if (elmToMove.tag !== newStartVnode.tag) {\n                    api.insertBefore(parentElm, createElm(newStartVnode), oldStartVnode.elm);\n                }\n                else {\n                    patchVnode(elmToMove, newStartVnode);\n                    oldCh[idxInOld] = undefined;\n                    api.insertBefore(parentElm, elmToMove.elm, oldStartVnode.elm);\n                }\n            }\n            newStartVnode = newCh[++newStartIdx];\n        }\n    }\n    if (oldStartIdx <= oldEndIdx || newStartIdx <= newEndIdx) {\n        if (oldStartIdx > oldEndIdx) {\n            before = newCh[newEndIdx + 1] == null ? null : newCh[newEndIdx + 1].elm;\n            addVnodes(parentElm, before, newCh, newStartIdx, newEndIdx);\n        }\n        else {\n            removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);\n        }\n    }\n}\nfunction patchVnode(oldVnode, vnode) {\n    var elm = (vnode.elm = oldVnode.elm);\n    var oldCh = oldVnode.children;\n    var ch = vnode.children;\n    if (oldVnode === vnode) {\n        return;\n    }\n    updateAttrs(oldVnode, vnode);\n    if (isUndef(vnode.text)) {\n        if (isDef(oldCh) && isDef(ch)) {\n            if (oldCh !== ch) {\n                updateChildren(elm, oldCh, ch);\n            }\n        }\n        else if (isDef(ch)) {\n            if (isDef(oldVnode.text)) {\n                api.setTextContent(elm, '');\n            }\n            addVnodes(elm, null, ch, 0, ch.length - 1);\n        }\n        else if (isDef(oldCh)) {\n            removeVnodes(elm, oldCh, 0, oldCh.length - 1);\n        }\n        else if (isDef(oldVnode.text)) {\n            api.setTextContent(elm, '');\n        }\n    }\n    else if (oldVnode.text !== vnode.text) {\n        if (isDef(oldCh)) {\n            removeVnodes(elm, oldCh, 0, oldCh.length - 1);\n        }\n        api.setTextContent(elm, vnode.text);\n    }\n}\nexport default function patch(oldVnode, vnode) {\n    if (sameVnode(oldVnode, vnode)) {\n        patchVnode(oldVnode, vnode);\n    }\n    else {\n        var elm = oldVnode.elm;\n        var parent_2 = api.parentNode(elm);\n        createElm(vnode);\n        if (parent_2 !== null) {\n            api.insertBefore(parent_2, vnode.elm, api.nextSibling(elm));\n            removeVnodes(parent_2, [oldVnode], 0, 0);\n        }\n    }\n    return vnode;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}