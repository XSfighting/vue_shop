{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: \"User\",\n\n  data() {\n    // 验证邮箱的规则\n    var checkEmai = (rule, value, cb) => {\n      // 验证邮箱的正则表达式\n      const regEmail = /^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+(\\.[a-zA-Z0-9_-])+/;\n\n      if (regEmail.test(value)) {\n        // 合法邮箱\n        return cb();\n      } else {\n        cb(new Error('请输入合法的邮箱'));\n      }\n    }; // 验证手机号的规则\n\n\n    var checkMobile = (rule, value, cb) => {\n      // 验证手机号的正则表达式\n      const regMobile = /^1[34578]\\d{9}$/;\n\n      if (regMobile.test(value)) {\n        return cb();\n      } //返回一个错误提示\n\n\n      cb(new Error('请输入合法的手机号码'));\n    };\n\n    return {\n      //  获取用户列表的参数对象\n      queryInfo: {\n        query: '',\n        // 当前的页数\n        pagenum: 1,\n        pagesize: 10\n      },\n      userList: [],\n      total: 0,\n      // 控制添加用户对话框的显示与隐藏\n      addDialogVisible: false,\n      editDialogVisible: false,\n      allotRoleDialogVisible: false,\n      // 添加用户的表单数据\n      addForm: {\n        username: '',\n        password: '',\n        email: '',\n        mobile: ''\n      },\n      // 添加表单的验证规则对象\n      addFormRules: {\n        username: [{\n          required: true,\n          message: '请输入用户名',\n          trigger: 'blur'\n        }, {\n          min: 3,\n          max: 10,\n          message: '用户名的长度在3~10个字符之间',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }, {\n          min: 6,\n          max: 15,\n          message: '用户名的长度在6~15个字符之间',\n          trigger: 'blur'\n        }],\n        email: [{\n          required: true,\n          message: '请输入邮箱',\n          trigger: 'blur'\n        }, {\n          validator: checkEmai,\n          trigger: 'blur'\n        }],\n        mobile: [{\n          required: true,\n          message: '请输入手机号码',\n          trigger: 'blur'\n        }, {\n          validator: checkMobile,\n          trigger: 'blur'\n        }]\n      },\n      editForm: [],\n      editFormRules: {\n        username: [{\n          required: true,\n          message: '请输入用户名',\n          trigger: 'blur'\n        }, {\n          min: 3,\n          max: 10,\n          message: '用户名的长度在3~10个字符之间',\n          trigger: 'blur'\n        }],\n        email: [{\n          required: true,\n          message: '请输入邮箱',\n          trigger: 'blur'\n        }, {\n          validator: checkEmai,\n          trigger: 'blur'\n        }],\n        mobile: [{\n          required: true,\n          message: '请输入手机号码',\n          trigger: 'blur'\n        }, {\n          validator: checkMobile,\n          trigger: 'blur'\n        }]\n      },\n      userInfo: {},\n      rolesList: [],\n      selectedRoleId: ''\n    };\n  },\n\n  created() {\n    this.getUserList();\n  },\n\n  methods: {\n    async getUserList() {\n      const {\n        data: res\n      } = await this.$http.get('users', {\n        params: this.queryInfo\n      });\n      if (res.meta.status !== 200) return this.$message.error(\"获取用户列表失败!\");\n      this.userList = res.data.users;\n      this.total = res.data.total;\n    },\n\n    // 监听pagesize改变的事件\n    handleSizeChange(newSize) {\n      this.queryInfo.pagesize = newSize;\n      this.getUserList();\n    },\n\n    // 监听页码值改变的事件\n    handleCurrentChange(newPage) {\n      this.queryInfo.pagenum = newPage;\n      this.getUserList();\n    },\n\n    async userStateChanged(userInfo) {\n      console.log(userInfo);\n      const {\n        data: res\n      } = await this.$http.put(`users/${userInfo.id}/state/${userInfo.mg_state}`);\n\n      if (res.meta.status !== 200) {\n        userInfo.mg_state = !userInfo.mg_state;\n        return this.$message.error('更新用户状态失败!');\n      } else {\n        this.$message.success('更新用户状态成功！');\n      }\n    },\n\n    // 监听添加用户对话框的关闭事件的事件\n    addDialogClosed() {\n      this.$refs.addFormRef.resetFields();\n    },\n\n    editDialogClosed() {\n      this.$refs.editFormRef.resetFields();\n    },\n\n    setRoleDialogClosed() {\n      this.selectedRoleId = '', this.userInfo = {};\n    },\n\n    // 点击按钮添加新用户\n    addUser() {\n      this.$refs.addFormRef.validate(async valid => {\n        if (!valid) return;\n        const {\n          data: res\n        } = await this.$http.post('users', this.addForm);\n\n        if (res.meta.state !== 201) {\n          this.$message.error('添加用户失败！');\n        }\n\n        this.$message.success('添加用户成功！'); // 隐藏添加用户的对话框\n\n        this.addDialogVisible = false; // 重新获取用户列表\n\n        this.getUserList();\n      });\n    },\n\n    // 点击按钮查询用户信息\n    async showEditDialog(id) {\n      const {\n        data: res\n      } = await this.$http.get('users/' + id);\n      if (res.meta.status !== 200) return this.$message.error('查询用户信息失败！');\n      this.$message.success('查询用户信息成功！');\n      this.editForm = res.data;\n      this.editDialogVisible = true;\n    },\n\n    editUserInfo() {\n      this.$refs.editFormRef.validate(async valid => {\n        if (!valid) return Error;\n        const {\n          data: res\n        } = await this.$http.put('users/' + this.editForm.id, {\n          email: this.editForm.email,\n          mobile: this.editForm.mobile\n        });\n\n        if (res.meta.status !== 200) {\n          return this.$message.error('更新用户信息失败！');\n        } // 关闭对话框\n\n\n        this.editDialogVisible = false; // 刷新数据列表\n\n        this.getUserList(); // 提示修改成功\n\n        this.$message.success('更新用户信息成功!');\n      });\n    },\n\n    async removeUserById(id) {\n      const confirmResult = await this.$confirm('此操作将永久删除该用户, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).catch(err => err);\n\n      if (confirmResult !== 'confirm') {\n        return this.$message.info('已取消删除');\n      }\n\n      const {\n        data: res\n      } = await this.$http.delete('users/' + id);\n      if (res.meta.status !== 200) return this.$message.error('删除用户失败！');\n      this.$message.success('删除用户成功！');\n      this.getUserList();\n    },\n\n    async setRole(userInfo) {\n      console.log(userInfo);\n      this.userInfo = userInfo;\n      const {\n        data: res\n      } = await this.$http.get('roles');\n\n      if (res.meta.status !== 200) {\n        return this.$message.error(\"获取角色列表失败\");\n      }\n\n      this.rolesList = res.data;\n      console.log(this.rolesList);\n      this.allotRoleDialogVisible = true;\n    },\n\n    async saveRoleInfo() {\n      if (!this.selectedRoleId) {\n        return this.$message.error('请选择要分配的角色！');\n      }\n\n      const {\n        data: res\n      } = await this.$http.put(`users/${this.userInfo.id}/role`, {\n        rid: this.selectedRoleId\n      });\n\n      if (res.meta.status !== 200) {\n        return this.$message.error('更新角色列表失败！');\n      }\n\n      this.$message.success('更新角色列表成功');\n      this.getUserList();\n      this.allotRoleDialogVisible = false;\n    }\n\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoIA;EACAA,YADA;;EAEAC;IACA;IACA;MACA;MACA;;MACA;QACA;QACA;MACA,CAHA,MAGA;QACAC;MACA;IACA,CATA,CAFA,CAYA;;;IACA;MACA;MACA;;MACA;QACA;MACA,CALA,CAMA;;;MACAA;IACA,CARA;;IASA;MACA;MACAC;QACAC,SADA;QAEA;QACAC,UAHA;QAIAC;MAJA,CAFA;MAQAC,YARA;MASAC,QATA;MAUA;MACAC,uBAXA;MAYAC,wBAZA;MAaAC,6BAbA;MAcA;MACAC;QACAC,YADA;QAEAC,YAFA;QAGAC,SAHA;QAIAC;MAJA,CAfA;MAsBA;MACAC;QACAJ,WACA;UAAAK;UAAAC;UAAAC;QAAA,CADA,EAEA;UAAAC;UAAAC;UAAAH;UAAAC;QAAA,CAFA,CADA;QAKAN,WACA;UAAAI;UAAAC;UAAAC;QAAA,CADA,EAEA;UAAAC;UAAAC;UAAAH;UAAAC;QAAA,CAFA,CALA;QASAL,QACA;UAAAG;UAAAC;UAAAC;QAAA,CADA,EAEA;UAAAG;UAAAH;QAAA,CAFA,CATA;QAaAJ,SACA;UAAAE;UAAAC;UAAAC;QAAA,CADA,EAEA;UAAAG;UAAAH;QAAA,CAFA;MAbA,CAvBA;MAyCAI,YAzCA;MA0CAC;QACAZ,WACA;UAAAK;UAAAC;UAAAC;QAAA,CADA,EAEA;UAAAC;UAAAC;UAAAH;UAAAC;QAAA,CAFA,CADA;QAKAL,QACA;UAAAG;UAAAC;UAAAC;QAAA,CADA,EAEA;UAAAG;UAAAH;QAAA,CAFA,CALA;QASAJ,SACA;UAAAE;UAAAC;UAAAC;QAAA,CADA,EAEA;UAAAG;UAAAH;QAAA,CAFA;MATA,CA1CA;MAwDAM,YAxDA;MAyDAC,aAzDA;MA0DAC;IA1DA;EA4DA,CApFA;;EAqFAC;IACA;EACA,CAvFA;;EAwFAC;IACA;MACA;QAAA7B;MAAA;QACA8B;MADA;MAGA;MACA;MACA;IACA,CARA;;IASA;IACAC;MACA;MACA;IACA,CAbA;;IAcA;IACAC;MACA;MACA;IACA,CAlBA;;IAmBA;MACAC;MACA;QAAAjC;MAAA;;MACA;QACAyB;QACA;MACA,CAHA,MAGA;QACA;MAEA;IACA,CA7BA;;IA8BA;IACAS;MACA;IACA,CAjCA;;IAkCAC;MACA;IACA,CApCA;;IAqCAC;MACA,0BACA,kBADA;IAEA,CAxCA;;IAyCA;IACAC;MACA;QACA;QACA;UAAArC;QAAA;;QACA;UACA;QACA;;QACA,iCANA,CAOA;;QACA,8BARA,CASA;;QACA;MACA,CAXA;IAYA,CAvDA;;IAwDA;IACA;MACA;QAAAA;MAAA;MACA;MACA;MACA;MACA;IACA,CA/DA;;IAgEAsC;MACA;QACA;QACA;UAAAtC;QAAA;UACAc,0BADA;UAEAC;QAFA;;QAIA;UACA;QACA,CARA,CASA;;;QACA,+BAVA,CAWA;;QACA,mBAZA,CAaA;;QACA;MAEA,CAhBA;IAiBA,CAlFA;;IAmFA;MACA;QACAwB,uBADA;QAEAC,sBAFA;QAGAC;MAHA,GAIAC,KAJA,CAIAC,UAJA;;MAKA;QACA;MACA;;MACA;QAAA3C;MAAA;MACA;MACA;MACA;IACA,CAhGA;;IAiGA;MACAiC;MACA;MACA;QAAAjC;MAAA;;MACA;QACA;MACA;;MACA;MACAiC;MACA;IACA,CA3GA;;IA4GA;MACA;QACA;MACA;;MACA;QAAAjC;MAAA;QACA4C;MADA;;MAEA;QACA;MACA;;MACA;MACA;MACA;IACA;;EAxHA;AAxFA","names":["name","data","cb","queryInfo","query","pagenum","pagesize","userList","total","addDialogVisible","editDialogVisible","allotRoleDialogVisible","addForm","username","password","email","mobile","addFormRules","required","message","trigger","min","max","validator","editForm","editFormRules","userInfo","rolesList","selectedRoleId","created","methods","params","handleSizeChange","handleCurrentChange","console","addDialogClosed","editDialogClosed","setRoleDialogClosed","addUser","editUserInfo","confirmButtonText","cancelButtonText","type","catch","err","rid"],"sourceRoot":"src/components/user","sources":["Users.vue"],"sourcesContent":["<template>\n\n<div>\n<!--  面包屑导航区域-->\n  <el-breadcrumb separator=\"/\">\n    <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\n    <el-breadcrumb-item>用户管理</el-breadcrumb-item>\n    <el-breadcrumb-item>用户列表</el-breadcrumb-item>\n  </el-breadcrumb>\n<!-- 卡片视图区域 -->\n  <el-card>\n    <!--  搜索与添加区-->\n    <el-row :gutter=\"20\">\n      <el-col :span=\"7\">\n        <el-input placeholder=\"请输入内容\" v-model=\"queryInfo.query\" clearable @clear=\"getUserList\">\n          <el-button slot=\"append\" icon=\"el-icon-search\" @click=\"getUserList\"></el-button>\n        </el-input>\n      </el-col>\n      <el-col :span=\"4\">\n        <el-button type=\"primary\" @click=\"addDialogVisible = true\">添加用户</el-button>\n      </el-col>\n    </el-row>\n<!--用户列表区域-->\n    <el-table :data=\"userList\" style=\"width: 100%\" stripe border>\n      <el-table-column label=\"#\" type=\"index\"></el-table-column>\n      <el-table-column label=\"姓名\" prop=\"username\"></el-table-column>\n      <el-table-column label=\"邮箱\" prop=\"email\"></el-table-column>\n      <el-table-column label=\"电话\" prop=\"mobile\"></el-table-column>\n      <el-table-column label=\"角色\" prop=\"role_name\"></el-table-column>\n      <el-table-column label=\"状态\" prop=\"mg_state\">\n        <template v-slot=\"scope\">\n          <el-switch v-model=\"scope.row.mg_state\" active-color=\"#13ce66\" inactive-color=\"#ff4949\"\n          @change=\"userStateChanged(scope.row)\">\n          </el-switch>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"操作\" width=\"180px\">\n        <template v-slot=\"scope\">\n          <el-tooltip  effect=\"dark\" content=\"编辑\" placement=\"top\" :enterable=\"false\">\n            <el-button type=\"primary\" icon=\"el-icon-edit\" size=\"mini\"\n                       @click=\"showEditDialog(scope.row.id)\"></el-button>\n          </el-tooltip>\n          <el-tooltip  effect=\"dark\" content=\"删除\" placement=\"top\" :enterable=\"false\">\n            <el-button type=\"danger\" icon=\"el-icon-delete\" size=\"mini\"\n                       @click=\"removeUserById(scope.row.id)\"></el-button>\n          </el-tooltip>\n          <el-tooltip  effect=\"dark\" content=\"分配角色\" placement=\"top\" :enterable=\"false\">\n            <el-button type=\"warning\" icon=\"el-icon-setting\" size=\"mini\"\n                       @click=\"setRole(scope.row)\"></el-button>\n          </el-tooltip>\n        </template>\n      </el-table-column>\n    </el-table>\n<!--    分页区域-->\n    <el-pagination\n        @size-change=\"handleSizeChange\"\n        @current-change=\"handleCurrentChange\"\n        :current-page=\"queryInfo.pagenum\"\n        :page-sizes=\"[1, 2, 5, 10]\"\n        :page-size=\"queryInfo.pagesize\"\n        layout=\"total, sizes, prev, pager, next, jumper\"\n        :total=\"total\">\n    </el-pagination>\n  </el-card>\n\n<!--添加用户的对话框-->\n  <el-dialog title=\"添加用户\" :visible.sync=\"addDialogVisible\" width=\"50%\" @close=\"addDialogClosed\">\n<!--    内容主体区-->\n    <el-form :model=\"addForm\" :rules=\"addFormRules\" ref=\"addFormRef\" label-width=\"70px\">\n      <el-form-item label=\"用户名\" prop=\"username\">\n        <el-input v-model=\"addForm.username\"></el-input>\n      </el-form-item>\n      <el-form-item label=\"密码\" prop=\"password\">\n        <el-input v-model=\"addForm.password\"></el-input>\n      </el-form-item>\n      <el-form-item label=\"邮箱\" prop=\"email\">\n        <el-input v-model=\"addForm.email\"></el-input>\n      </el-form-item>\n      <el-form-item label=\"手机\" prop=\"mobile\">\n        <el-input v-model=\"addForm.mobile\"></el-input>\n      </el-form-item>\n    </el-form>\n<!--    底部区-->\n    <span slot=\"footer\" class=\"dialog-footer\">\n    <el-button @click=\"addDialogVisible = false\">取 消</el-button>\n    <el-button type=\"primary\" @click=\"addUser\">确 定</el-button>\n  </span>\n  </el-dialog>\n\n  <!--修改用户信息的对话框-->\n  <el-dialog title=\"修改信息\" :visible.sync=\"editDialogVisible\" width=\"50%\"  @close=\"editDialogClosed\">\n    <!--    内容主体区-->\n    <el-form :model=\"editForm\" :rules=\"editFormRules\" ref=\"editFormRef\" label-width=\"70px\">\n      <el-form-item label=\"用户名\">\n        <el-input v-model=\"editForm.username\" disabled></el-input>\n      </el-form-item>\n      <el-form-item label=\"邮箱\" prop=\"email\">\n        <el-input v-model=\"editForm.email\"></el-input>\n      </el-form-item>\n      <el-form-item label=\"手机\" prop=\"mobile\">\n        <el-input v-model=\"editForm.mobile\"></el-input>\n      </el-form-item>\n    </el-form>\n    <!--    底部区-->\n    <span slot=\"footer\" class=\"dialog-footer\">\n    <el-button @click=\"editDialogVisible = false\">取 消</el-button>\n    <el-button type=\"primary\" @click=\"editUserInfo\">确 定</el-button>\n  </span>\n  </el-dialog>\n\n<!--  分配角色的对话框-->\n  <el-dialog title=\"分配角色\" :visible.sync=\"allotRoleDialogVisible\" width=\"50%\" @close=\"setRoleDialogClosed\">\n    <div>\n      <p>当前的用户 : {{userInfo.username}}</p>\n      <p>当前的角色 : {{userInfo.role_name}}</p>\n      <p>分配新角色 :\n        <el-select v-model=\"selectedRoleId\" placeholder=\"请选择\" >\n          <el-option v-for=\"item in rolesList\" :key=\"item.id\" :label=\"item.roleName\" :value=\"item.id\">\n          </el-option>\n        </el-select>\n      </p>\n    </div>\n    <span slot=\"footer\" class=\"dialog-footer\">\n    <el-button @click=\"allotRoleDialogVisible = false\">取 消</el-button>\n    <el-button type=\"primary\" @click=\"saveRoleInfo\">确 定</el-button>\n  </span>\n  </el-dialog>\n\n</div>\n</template>\n\n<script>\nexport default {\n  name: \"User\",\n  data() {\n    // 验证邮箱的规则\n    var checkEmai = (rule, value, cb) => {\n      // 验证邮箱的正则表达式\n      const regEmail = /^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+(\\.[a-zA-Z0-9_-])+/\n      if (regEmail.test(value)) {\n        // 合法邮箱\n        return cb()\n      } else {\n        cb(new Error('请输入合法的邮箱'))\n      }\n    }\n    // 验证手机号的规则\n    var checkMobile = (rule, value, cb) => {\n      // 验证手机号的正则表达式\n      const regMobile = /^1[34578]\\d{9}$/\n      if (regMobile.test(value)) {\n        return cb()\n      }\n      //返回一个错误提示\n      cb(new Error('请输入合法的手机号码'))\n    }\n    return {\n      //  获取用户列表的参数对象\n      queryInfo: {\n        query: '',\n        // 当前的页数\n        pagenum: 1,\n        pagesize: 10\n      },\n      userList: [],\n      total: 0,\n      // 控制添加用户对话框的显示与隐藏\n      addDialogVisible: false,\n      editDialogVisible: false,\n      allotRoleDialogVisible: false,\n      // 添加用户的表单数据\n      addForm: {\n        username: '',\n        password: '',\n        email: '',\n        mobile: '',\n\n      },\n      // 添加表单的验证规则对象\n      addFormRules: {\n        username: [\n          {required: true, message: '请输入用户名', trigger: 'blur'},\n          {min: 3, max: 10, message: '用户名的长度在3~10个字符之间', trigger: 'blur'}\n        ],\n        password: [\n          {required: true, message: '请输入密码', trigger: 'blur'},\n          {min: 6, max: 15, message: '用户名的长度在6~15个字符之间', trigger: 'blur'}\n        ],\n        email: [\n          {required: true, message: '请输入邮箱', trigger: 'blur'},\n          {validator: checkEmai, trigger: 'blur'}\n        ],\n        mobile: [\n          {required: true, message: '请输入手机号码', trigger: 'blur'},\n          {validator: checkMobile, trigger: 'blur'}\n        ]\n      },\n      editForm: [],\n      editFormRules: {\n        username: [\n          {required: true, message: '请输入用户名', trigger: 'blur'},\n          {min: 3, max: 10, message: '用户名的长度在3~10个字符之间', trigger: 'blur'}\n        ],\n        email: [\n          {required: true, message: '请输入邮箱', trigger: 'blur'},\n          {validator: checkEmai, trigger: 'blur'}\n        ],\n        mobile: [\n          {required: true, message: '请输入手机号码', trigger: 'blur'},\n          {validator: checkMobile, trigger: 'blur'}\n        ]\n      },\n      userInfo: {},\n      rolesList: [],\n      selectedRoleId: ''\n    }\n  },\n  created() {\n    this.getUserList()\n  },\n  methods: {\n    async getUserList() {\n      const {data: res} = await this.$http.get('users', {\n        params: this.queryInfo\n      })\n      if (res.meta.status !== 200) return this.$message.error(\"获取用户列表失败!\")\n      this.userList = res.data.users\n      this.total = res.data.total\n    },\n    // 监听pagesize改变的事件\n    handleSizeChange(newSize) {\n      this.queryInfo.pagesize = newSize\n      this.getUserList()\n    },\n    // 监听页码值改变的事件\n    handleCurrentChange(newPage) {\n      this.queryInfo.pagenum = newPage\n      this.getUserList()\n    },\n    async userStateChanged(userInfo) {\n      console.log(userInfo);\n      const {data: res} = await this.$http.put(`users/${userInfo.id}/state/${userInfo.mg_state}`)\n      if (res.meta.status !== 200) {\n        userInfo.mg_state = !userInfo.mg_state\n        return this.$message.error('更新用户状态失败!')\n      } else {\n        this.$message.success('更新用户状态成功！')\n\n      }\n    },\n    // 监听添加用户对话框的关闭事件的事件\n    addDialogClosed() {\n      this.$refs.addFormRef.resetFields()\n    },\n    editDialogClosed() {\n      this.$refs.editFormRef.resetFields()\n    },\n    setRoleDialogClosed() {\n      this.selectedRoleId = '',\n          this.userInfo = {}\n    },\n    // 点击按钮添加新用户\n    addUser() {\n      this.$refs.addFormRef.validate(async valid => {\n        if (!valid) return\n        const {data: res} = await this.$http.post('users', this.addForm)\n        if (res.meta.state !== 201) {\n          this.$message.error('添加用户失败！')\n        }\n        this.$message.success('添加用户成功！')\n        // 隐藏添加用户的对话框\n        this.addDialogVisible = false\n        // 重新获取用户列表\n        this.getUserList()\n      })\n    },\n    // 点击按钮查询用户信息\n    async showEditDialog(id) {\n      const {data: res} = await this.$http.get('users/' + id)\n      if (res.meta.status !== 200) return this.$message.error('查询用户信息失败！')\n      this.$message.success('查询用户信息成功！')\n      this.editForm = res.data\n      this.editDialogVisible = true\n    },\n    editUserInfo() {\n     this.$refs.editFormRef.validate( async valid=> {\n       if (!valid) return Error\n       const {data: res} = await this.$http.put('users/' + this.editForm.id, {\n         email: this.editForm.email,\n         mobile: this.editForm.mobile\n       })\n       if (res.meta.status !== 200) {\n         return this.$message.error('更新用户信息失败！')\n       }\n       // 关闭对话框\n       this.editDialogVisible = false\n       // 刷新数据列表\n       this.getUserList()\n       // 提示修改成功\n       this.$message.success('更新用户信息成功!')\n\n     })\n    },\n    async removeUserById(id) {\n      const confirmResult = await this.$confirm('此操作将永久删除该用户, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).catch(err=> err)\n      if (confirmResult !== 'confirm') {\n        return this.$message.info('已取消删除')\n      }\n       const {data: res} = await this.$http.delete('users/' + id)\n      if (res.meta.status !== 200) return this.$message.error('删除用户失败！')\n      this.$message.success('删除用户成功！')\n      this.getUserList()\n    },\n    async setRole(userInfo) {\n      console.log(userInfo);\n      this.userInfo = userInfo\n      const {data: res} = await this.$http.get('roles')\n      if (res.meta.status !== 200) {\n        return this.$message.error(\"获取角色列表失败\")\n      }\n      this.rolesList = res.data\n      console.log(this.rolesList);\n      this.allotRoleDialogVisible = true\n    },\n   async saveRoleInfo() {\n      if (!this.selectedRoleId) {\n        return this.$message.error('请选择要分配的角色！')\n      }\n      const {data: res} = await this.$http.put(`users/${this.userInfo.id}/role`, {\n        rid: this.selectedRoleId})\n     if (res.meta.status !== 200) {\n       return this.$message.error('更新角色列表失败！')\n     }\n     this.$message.success('更新角色列表成功')\n     this.getUserList()\n     this.allotRoleDialogVisible = false\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n</style>"]},"metadata":{},"sourceType":"module"}