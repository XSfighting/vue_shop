{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/13203/Desktop/\\u540E\\u53F0\\u7BA1\\u7406\\u7CFB\\u7EDF/vue_shop2/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.test.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.array.concat.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: \"User\",\n  data: function data() {\n    // 验证邮箱的规则\n    var checkEmai = function checkEmai(rule, value, cb) {\n      // 验证邮箱的正则表达式\n      var regEmail = /^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+(\\.[a-zA-Z0-9_-])+/;\n\n      if (regEmail.test(value)) {\n        // 合法邮箱\n        return cb();\n      } else {\n        cb(new Error('请输入合法的邮箱'));\n      }\n    }; // 验证手机号的规则\n\n\n    var checkMobile = function checkMobile(rule, value, cb) {\n      // 验证手机号的正则表达式\n      var regMobile = /^1[34578]\\d{9}$/;\n\n      if (regMobile.test(value)) {\n        return cb();\n      } //返回一个错误提示\n\n\n      cb(new Error('请输入合法的手机号码'));\n    };\n\n    return {\n      //  获取用户列表的参数对象\n      queryInfo: {\n        query: '',\n        // 当前的页数\n        pagenum: 1,\n        pagesize: 10\n      },\n      userList: [],\n      total: 0,\n      // 控制添加用户对话框的显示与隐藏\n      addDialogVisible: false,\n      editDialogVisible: false,\n      allotRoleDialogVisible: false,\n      // 添加用户的表单数据\n      addForm: {\n        username: '',\n        password: '',\n        email: '',\n        mobile: ''\n      },\n      // 添加表单的验证规则对象\n      addFormRules: {\n        username: [{\n          required: true,\n          message: '请输入用户名',\n          trigger: 'blur'\n        }, {\n          min: 3,\n          max: 10,\n          message: '用户名的长度在3~10个字符之间',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }, {\n          min: 6,\n          max: 15,\n          message: '用户名的长度在6~15个字符之间',\n          trigger: 'blur'\n        }],\n        email: [{\n          required: true,\n          message: '请输入邮箱',\n          trigger: 'blur'\n        }, {\n          validator: checkEmai,\n          trigger: 'blur'\n        }],\n        mobile: [{\n          required: true,\n          message: '请输入手机号码',\n          trigger: 'blur'\n        }, {\n          validator: checkMobile,\n          trigger: 'blur'\n        }]\n      },\n      editForm: [],\n      editFormRules: {\n        username: [{\n          required: true,\n          message: '请输入用户名',\n          trigger: 'blur'\n        }, {\n          min: 3,\n          max: 10,\n          message: '用户名的长度在3~10个字符之间',\n          trigger: 'blur'\n        }],\n        email: [{\n          required: true,\n          message: '请输入邮箱',\n          trigger: 'blur'\n        }, {\n          validator: checkEmai,\n          trigger: 'blur'\n        }],\n        mobile: [{\n          required: true,\n          message: '请输入手机号码',\n          trigger: 'blur'\n        }, {\n          validator: checkMobile,\n          trigger: 'blur'\n        }]\n      },\n      userInfo: {},\n      rolesList: [],\n      selectedRoleId: ''\n    };\n  },\n  created: function created() {\n    this.getUserList();\n  },\n  methods: {\n    getUserList: function getUserList() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var _yield$_this$$http$ge, res;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _this.$http.get('users', {\n                  params: _this.queryInfo\n                });\n\n              case 2:\n                _yield$_this$$http$ge = _context.sent;\n                res = _yield$_this$$http$ge.data;\n\n                if (!(res.meta.status !== 200)) {\n                  _context.next = 6;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", _this.$message.error(\"获取用户列表失败!\"));\n\n              case 6:\n                _this.userList = res.data.users;\n                _this.total = res.data.total;\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n    // 监听pagesize改变的事件\n    handleSizeChange: function handleSizeChange(newSize) {\n      this.queryInfo.pagesize = newSize;\n      this.getUserList();\n    },\n    // 监听页码值改变的事件\n    handleCurrentChange: function handleCurrentChange(newPage) {\n      this.queryInfo.pagenum = newPage;\n      this.getUserList();\n    },\n    userStateChanged: function userStateChanged(userInfo) {\n      var _this2 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var _yield$_this2$$http$p, res;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                console.log(userInfo);\n                _context2.next = 3;\n                return _this2.$http.put(\"users/\".concat(userInfo.id, \"/state/\").concat(userInfo.mg_state));\n\n              case 3:\n                _yield$_this2$$http$p = _context2.sent;\n                res = _yield$_this2$$http$p.data;\n\n                if (!(res.meta.status !== 200)) {\n                  _context2.next = 10;\n                  break;\n                }\n\n                userInfo.mg_state = !userInfo.mg_state;\n                return _context2.abrupt(\"return\", _this2.$message.error('更新用户状态失败!'));\n\n              case 10:\n                _this2.$message.success('更新用户状态成功！');\n\n              case 11:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    },\n    // 监听添加用户对话框的关闭事件的事件\n    addDialogClosed: function addDialogClosed() {\n      this.$refs.addFormRef.resetFields();\n    },\n    editDialogClosed: function editDialogClosed() {\n      this.$refs.editFormRef.resetFields();\n    },\n    setRoleDialogClosed: function setRoleDialogClosed() {\n      this.selectedRoleId = '', this.userInfo = {};\n    },\n    // 点击按钮添加新用户\n    addUser: function addUser() {\n      var _this3 = this;\n\n      this.$refs.addFormRef.validate( /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(valid) {\n          var _yield$_this3$$http$p, res;\n\n          return regeneratorRuntime.wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  if (valid) {\n                    _context3.next = 2;\n                    break;\n                  }\n\n                  return _context3.abrupt(\"return\");\n\n                case 2:\n                  _context3.next = 4;\n                  return _this3.$http.post('users', _this3.addForm);\n\n                case 4:\n                  _yield$_this3$$http$p = _context3.sent;\n                  res = _yield$_this3$$http$p.data;\n\n                  if (res.meta.state !== 201) {\n                    _this3.$message.error('添加用户失败！');\n                  }\n\n                  _this3.$message.success('添加用户成功！'); // 隐藏添加用户的对话框\n\n\n                  _this3.addDialogVisible = false; // 重新获取用户列表\n\n                  _this3.getUserList();\n\n                case 10:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, _callee3);\n        }));\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    },\n    // 点击按钮查询用户信息\n    showEditDialog: function showEditDialog(id) {\n      var _this4 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n        var _yield$_this4$$http$g, res;\n\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return _this4.$http.get('users/' + id);\n\n              case 2:\n                _yield$_this4$$http$g = _context4.sent;\n                res = _yield$_this4$$http$g.data;\n\n                if (!(res.meta.status !== 200)) {\n                  _context4.next = 6;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\", _this4.$message.error('查询用户信息失败！'));\n\n              case 6:\n                _this4.$message.success('查询用户信息成功！');\n\n                _this4.editForm = res.data;\n                _this4.editDialogVisible = true;\n\n              case 9:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }))();\n    },\n    editUserInfo: function editUserInfo() {\n      var _this5 = this;\n\n      this.$refs.editFormRef.validate( /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(valid) {\n          var _yield$_this5$$http$p, res;\n\n          return regeneratorRuntime.wrap(function _callee5$(_context5) {\n            while (1) {\n              switch (_context5.prev = _context5.next) {\n                case 0:\n                  if (valid) {\n                    _context5.next = 2;\n                    break;\n                  }\n\n                  return _context5.abrupt(\"return\", Error);\n\n                case 2:\n                  _context5.next = 4;\n                  return _this5.$http.put('users/' + _this5.editForm.id, {\n                    email: _this5.editForm.email,\n                    mobile: _this5.editForm.mobile\n                  });\n\n                case 4:\n                  _yield$_this5$$http$p = _context5.sent;\n                  res = _yield$_this5$$http$p.data;\n\n                  if (!(res.meta.status !== 200)) {\n                    _context5.next = 8;\n                    break;\n                  }\n\n                  return _context5.abrupt(\"return\", _this5.$message.error('更新用户信息失败！'));\n\n                case 8:\n                  // 关闭对话框\n                  _this5.editDialogVisible = false; // 刷新数据列表\n\n                  _this5.getUserList(); // 提示修改成功\n\n\n                  _this5.$message.success('更新用户信息成功!');\n\n                case 11:\n                case \"end\":\n                  return _context5.stop();\n              }\n            }\n          }, _callee5);\n        }));\n\n        return function (_x2) {\n          return _ref2.apply(this, arguments);\n        };\n      }());\n    },\n    removeUserById: function removeUserById(id) {\n      var _this6 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6() {\n        var confirmResult, _yield$_this6$$http$d, res;\n\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return _this6.$confirm('此操作将永久删除该用户, 是否继续?', '提示', {\n                  confirmButtonText: '确定',\n                  cancelButtonText: '取消',\n                  type: 'warning'\n                }).catch(function (err) {\n                  return err;\n                });\n\n              case 2:\n                confirmResult = _context6.sent;\n\n                if (!(confirmResult !== 'confirm')) {\n                  _context6.next = 5;\n                  break;\n                }\n\n                return _context6.abrupt(\"return\", _this6.$message.info('已取消删除'));\n\n              case 5:\n                _context6.next = 7;\n                return _this6.$http.delete('users/' + id);\n\n              case 7:\n                _yield$_this6$$http$d = _context6.sent;\n                res = _yield$_this6$$http$d.data;\n\n                if (!(res.meta.status !== 200)) {\n                  _context6.next = 11;\n                  break;\n                }\n\n                return _context6.abrupt(\"return\", _this6.$message.error('删除用户失败！'));\n\n              case 11:\n                _this6.$message.success('删除用户成功！');\n\n                _this6.getUserList();\n\n              case 13:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }))();\n    },\n    setRole: function setRole(userInfo) {\n      var _this7 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7() {\n        var _yield$_this7$$http$g, res;\n\n        return regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                console.log(userInfo);\n                _this7.userInfo = userInfo;\n                _context7.next = 4;\n                return _this7.$http.get('roles');\n\n              case 4:\n                _yield$_this7$$http$g = _context7.sent;\n                res = _yield$_this7$$http$g.data;\n\n                if (!(res.meta.status !== 200)) {\n                  _context7.next = 8;\n                  break;\n                }\n\n                return _context7.abrupt(\"return\", _this7.$message.error(\"获取角色列表失败\"));\n\n              case 8:\n                _this7.rolesList = res.data;\n                console.log(_this7.rolesList);\n                _this7.allotRoleDialogVisible = true;\n\n              case 11:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }))();\n    },\n    saveRoleInfo: function saveRoleInfo() {\n      var _this8 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8() {\n        var _yield$_this8$$http$p, res;\n\n        return regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                if (_this8.selectedRoleId) {\n                  _context8.next = 2;\n                  break;\n                }\n\n                return _context8.abrupt(\"return\", _this8.$message.error('请选择要分配的角色！'));\n\n              case 2:\n                _context8.next = 4;\n                return _this8.$http.put(\"users/\".concat(_this8.userInfo.id, \"/role\"), {\n                  rid: _this8.selectedRoleId\n                });\n\n              case 4:\n                _yield$_this8$$http$p = _context8.sent;\n                res = _yield$_this8$$http$p.data;\n\n                if (!(res.meta.status !== 200)) {\n                  _context8.next = 8;\n                  break;\n                }\n\n                return _context8.abrupt(\"return\", _this8.$message.error('更新角色列表失败！'));\n\n              case 8:\n                _this8.$message.success('更新角色列表成功');\n\n                _this8.getUserList();\n\n                _this8.allotRoleDialogVisible = false;\n\n              case 11:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8);\n      }))();\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["name","data","cb","queryInfo","query","pagenum","pagesize","userList","total","addDialogVisible","editDialogVisible","allotRoleDialogVisible","addForm","username","password","email","mobile","addFormRules","required","message","trigger","min","max","validator","editForm","editFormRules","userInfo","rolesList","selectedRoleId","created","methods","getUserList","params","res","handleSizeChange","newSize","handleCurrentChange","newPage","userStateChanged","console","addDialogClosed","editDialogClosed","setRoleDialogClosed","addUser","valid","showEditDialog","id","editUserInfo","Error","removeUserById","confirmButtonText","cancelButtonText","type","catch","confirmResult","setRole","saveRoleInfo","rid"],"sourceRoot":"src/components/user","sources":["Users.vue"],"sourcesContent":["<template>\r\n\r\n<div>\r\n<!--  面包屑导航区域-->\r\n  <el-breadcrumb separator=\"/\">\r\n    <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\r\n    <el-breadcrumb-item>用户管理</el-breadcrumb-item>\r\n    <el-breadcrumb-item>用户列表</el-breadcrumb-item>\r\n  </el-breadcrumb>\r\n<!-- 卡片视图区域 -->\r\n  <el-card>\r\n    <!--  搜索与添加区-->\r\n    <el-row :gutter=\"20\">\r\n      <el-col :span=\"7\">\r\n        <el-input placeholder=\"请输入内容\" v-model=\"queryInfo.query\" clearable @clear=\"getUserList\">\r\n          <el-button slot=\"append\" icon=\"el-icon-search\" @click=\"getUserList\"></el-button>\r\n        </el-input>\r\n      </el-col>\r\n      <el-col :span=\"4\">\r\n        <el-button type=\"primary\" @click=\"addDialogVisible = true\">添加用户</el-button>\r\n      </el-col>\r\n    </el-row>\r\n<!--用户列表区域-->\r\n    <el-table :data=\"userList\" style=\"width: 100%\" stripe border>\r\n      <el-table-column label=\"#\" type=\"index\"></el-table-column>\r\n      <el-table-column label=\"姓名\" prop=\"username\"></el-table-column>\r\n      <el-table-column label=\"邮箱\" prop=\"email\"></el-table-column>\r\n      <el-table-column label=\"电话\" prop=\"mobile\"></el-table-column>\r\n      <el-table-column label=\"角色\" prop=\"role_name\"></el-table-column>\r\n      <el-table-column label=\"状态\" prop=\"mg_state\">\r\n        <template v-slot=\"scope\">\r\n          <el-switch v-model=\"scope.row.mg_state\" active-color=\"#13ce66\" inactive-color=\"#ff4949\"\r\n          @change=\"userStateChanged(scope.row)\">\r\n          </el-switch>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"操作\" width=\"180px\">\r\n        <template v-slot=\"scope\">\r\n          <el-tooltip  effect=\"dark\" content=\"编辑\" placement=\"top\" :enterable=\"false\">\r\n            <el-button type=\"primary\" icon=\"el-icon-edit\" size=\"mini\" @click=\"showEditDialog(scope.row.id)\"></el-button>\r\n          </el-tooltip>\r\n          <el-tooltip  effect=\"dark\" content=\"删除\" placement=\"top\" :enterable=\"false\">\r\n            <el-button type=\"danger\" icon=\"el-icon-delete\" size=\"mini\"\r\n                       @click=\"removeUserById(scope.row.id)\"></el-button>\r\n          </el-tooltip>\r\n          <el-tooltip  effect=\"dark\" content=\"分配角色\" placement=\"top\" :enterable=\"false\">\r\n            <el-button type=\"warning\" icon=\"el-icon-setting\" size=\"mini\" @click=\"setRole(scope.row)\"></el-button>\r\n          </el-tooltip>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n<!--    分页区域-->\r\n    <el-pagination\r\n        @size-change=\"handleSizeChange\"\r\n        @current-change=\"handleCurrentChange\"\r\n        :current-page=\"queryInfo.pagenum\"\r\n        :page-sizes=\"[1, 2, 5, 10]\"\r\n        :page-size=\"queryInfo.pagesize\"\r\n        layout=\"total, sizes, prev, pager, next, jumper\"\r\n        :total=\"total\">\r\n    </el-pagination>\r\n  </el-card>\r\n\r\n<!--添加用户的对话框-->\r\n  <el-dialog title=\"添加用户\" :visible.sync=\"addDialogVisible\" width=\"50%\" @close=\"addDialogClosed\">\r\n<!--    内容主体区-->\r\n    <el-form :model=\"addForm\" :rules=\"addFormRules\" ref=\"addFormRef\" label-width=\"70px\">\r\n      <el-form-item label=\"用户名\" prop=\"username\">\r\n        <el-input v-model=\"addForm.username\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"密码\" prop=\"password\">\r\n        <el-input v-model=\"addForm.password\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"邮箱\" prop=\"email\">\r\n        <el-input v-model=\"addForm.email\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"手机\" prop=\"mobile\">\r\n        <el-input v-model=\"addForm.mobile\"></el-input>\r\n      </el-form-item>\r\n    </el-form>\r\n<!--    底部区-->\r\n    <span slot=\"footer\" class=\"dialog-footer\">\r\n    <el-button @click=\"addDialogVisible = false\">取 消</el-button>\r\n    <el-button type=\"primary\" @click=\"addUser\">确 定</el-button>\r\n  </span>\r\n  </el-dialog>\r\n\r\n  <!--修改用户信息的对话框-->\r\n  <el-dialog title=\"修改信息\" :visible.sync=\"editDialogVisible\" width=\"50%\"  @close=\"editDialogClosed\">\r\n    <!--    内容主体区-->\r\n    <el-form :model=\"editForm\" :rules=\"editFormRules\" ref=\"editFormRef\" label-width=\"70px\">\r\n      <el-form-item label=\"用户名\">\r\n        <el-input v-model=\"editForm.username\" disabled></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"邮箱\" prop=\"email\">\r\n        <el-input v-model=\"editForm.email\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"手机\" prop=\"mobile\">\r\n        <el-input v-model=\"editForm.mobile\"></el-input>\r\n      </el-form-item>\r\n    </el-form>\r\n    <!--    底部区-->\r\n    <span slot=\"footer\" class=\"dialog-footer\">\r\n    <el-button @click=\"editDialogVisible = false\">取 消</el-button>\r\n    <el-button type=\"primary\" @click=\"editUserInfo\">确 定</el-button>\r\n  </span>\r\n  </el-dialog>\r\n\r\n<!--  分配角色的对话框-->\r\n  <el-dialog title=\"分配角色\" :visible.sync=\"allotRoleDialogVisible\" width=\"50%\" @close=\"setRoleDialogClosed\">\r\n    <div>\r\n      <p>当前的用户 : {{userInfo.username}}</p>\r\n      <p>当前的角色 : {{userInfo.role_name}}</p>\r\n      <p>分配新角色 :\r\n        <el-select v-model=\"selectedRoleId\" placeholder=\"请选择\" >\r\n          <el-option v-for=\"item in rolesList\" :key=\"item.id\" :label=\"item.roleName\" :value=\"item.id\">\r\n          </el-option>\r\n        </el-select>\r\n      </p>\r\n    </div>\r\n    <span slot=\"footer\" class=\"dialog-footer\">\r\n    <el-button @click=\"allotRoleDialogVisible = false\">取 消</el-button>\r\n    <el-button type=\"primary\" @click=\"saveRoleInfo\">确 定</el-button>\r\n  </span>\r\n  </el-dialog>\r\n\r\n</div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"User\",\r\n  data() {\r\n    // 验证邮箱的规则\r\n    var checkEmai = (rule, value, cb) => {\r\n      // 验证邮箱的正则表达式\r\n      const regEmail = /^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+(\\.[a-zA-Z0-9_-])+/\r\n      if (regEmail.test(value)) {\r\n        // 合法邮箱\r\n        return cb()\r\n      } else {\r\n        cb(new Error('请输入合法的邮箱'))\r\n      }\r\n    }\r\n    // 验证手机号的规则\r\n    var checkMobile = (rule, value, cb) => {\r\n      // 验证手机号的正则表达式\r\n      const regMobile = /^1[34578]\\d{9}$/\r\n      if (regMobile.test(value)) {\r\n        return cb()\r\n      }\r\n      //返回一个错误提示\r\n      cb(new Error('请输入合法的手机号码'))\r\n    }\r\n    return {\r\n      //  获取用户列表的参数对象\r\n      queryInfo: {\r\n        query: '',\r\n        // 当前的页数\r\n        pagenum: 1,\r\n        pagesize: 10\r\n      },\r\n      userList: [],\r\n      total: 0,\r\n      // 控制添加用户对话框的显示与隐藏\r\n      addDialogVisible: false,\r\n      editDialogVisible: false,\r\n      allotRoleDialogVisible: false,\r\n      // 添加用户的表单数据\r\n      addForm: {\r\n        username: '',\r\n        password: '',\r\n        email: '',\r\n        mobile: '',\r\n\r\n      },\r\n      // 添加表单的验证规则对象\r\n      addFormRules: {\r\n        username: [\r\n          {required: true, message: '请输入用户名', trigger: 'blur'},\r\n          {min: 3, max: 10, message: '用户名的长度在3~10个字符之间', trigger: 'blur'}\r\n        ],\r\n        password: [\r\n          {required: true, message: '请输入密码', trigger: 'blur'},\r\n          {min: 6, max: 15, message: '用户名的长度在6~15个字符之间', trigger: 'blur'}\r\n        ],\r\n        email: [\r\n          {required: true, message: '请输入邮箱', trigger: 'blur'},\r\n          {validator: checkEmai, trigger: 'blur'}\r\n        ],\r\n        mobile: [\r\n          {required: true, message: '请输入手机号码', trigger: 'blur'},\r\n          {validator: checkMobile, trigger: 'blur'}\r\n        ]\r\n      },\r\n      editForm: [],\r\n      editFormRules: {\r\n        username: [\r\n          {required: true, message: '请输入用户名', trigger: 'blur'},\r\n          {min: 3, max: 10, message: '用户名的长度在3~10个字符之间', trigger: 'blur'}\r\n        ],\r\n        email: [\r\n          {required: true, message: '请输入邮箱', trigger: 'blur'},\r\n          {validator: checkEmai, trigger: 'blur'}\r\n        ],\r\n        mobile: [\r\n          {required: true, message: '请输入手机号码', trigger: 'blur'},\r\n          {validator: checkMobile, trigger: 'blur'}\r\n        ]\r\n      },\r\n      userInfo: {},\r\n      rolesList: [],\r\n      selectedRoleId: ''\r\n    }\r\n  },\r\n  created() {\r\n    this.getUserList()\r\n  },\r\n  methods: {\r\n    async getUserList() {\r\n      const {data: res} = await this.$http.get('users', {\r\n        params: this.queryInfo\r\n      })\r\n      if (res.meta.status !== 200) return this.$message.error(\"获取用户列表失败!\")\r\n      this.userList = res.data.users\r\n      this.total = res.data.total\r\n    },\r\n    // 监听pagesize改变的事件\r\n    handleSizeChange(newSize) {\r\n      this.queryInfo.pagesize = newSize\r\n      this.getUserList()\r\n    },\r\n    // 监听页码值改变的事件\r\n    handleCurrentChange(newPage) {\r\n      this.queryInfo.pagenum = newPage\r\n      this.getUserList()\r\n    },\r\n    async userStateChanged(userInfo) {\r\n      console.log(userInfo);\r\n      const {data: res} = await this.$http.put(`users/${userInfo.id}/state/${userInfo.mg_state}`)\r\n      if (res.meta.status !== 200) {\r\n        userInfo.mg_state = !userInfo.mg_state\r\n        return this.$message.error('更新用户状态失败!')\r\n      } else {\r\n        this.$message.success('更新用户状态成功！')\r\n\r\n      }\r\n    },\r\n    // 监听添加用户对话框的关闭事件的事件\r\n    addDialogClosed() {\r\n      this.$refs.addFormRef.resetFields()\r\n    },\r\n    editDialogClosed() {\r\n      this.$refs.editFormRef.resetFields()\r\n    },\r\n    setRoleDialogClosed() {\r\n      this.selectedRoleId = '',\r\n          this.userInfo = {}\r\n    },\r\n    // 点击按钮添加新用户\r\n    addUser() {\r\n      this.$refs.addFormRef.validate(async valid => {\r\n        if (!valid) return\r\n        const {data: res} = await this.$http.post('users', this.addForm)\r\n        if (res.meta.state !== 201) {\r\n          this.$message.error('添加用户失败！')\r\n        }\r\n        this.$message.success('添加用户成功！')\r\n        // 隐藏添加用户的对话框\r\n        this.addDialogVisible = false\r\n        // 重新获取用户列表\r\n        this.getUserList()\r\n      })\r\n    },\r\n    // 点击按钮查询用户信息\r\n    async showEditDialog(id) {\r\n      const {data: res} = await this.$http.get('users/' + id)\r\n      if (res.meta.status !== 200) return this.$message.error('查询用户信息失败！')\r\n      this.$message.success('查询用户信息成功！')\r\n      this.editForm = res.data\r\n      this.editDialogVisible = true\r\n    },\r\n    editUserInfo() {\r\n     this.$refs.editFormRef.validate( async valid=> {\r\n       if (!valid) return Error\r\n       const {data: res} = await this.$http.put('users/' + this.editForm.id, {\r\n         email: this.editForm.email,\r\n         mobile: this.editForm.mobile\r\n       })\r\n       if (res.meta.status !== 200) {\r\n         return this.$message.error('更新用户信息失败！')\r\n       }\r\n       // 关闭对话框\r\n       this.editDialogVisible = false\r\n       // 刷新数据列表\r\n       this.getUserList()\r\n       // 提示修改成功\r\n       this.$message.success('更新用户信息成功!')\r\n\r\n     })\r\n    },\r\n    async removeUserById(id) {\r\n      const confirmResult = await this.$confirm('此操作将永久删除该用户, 是否继续?', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).catch(err=> err)\r\n      if (confirmResult !== 'confirm') {\r\n        return this.$message.info('已取消删除')\r\n      }\r\n       const {data: res} = await this.$http.delete('users/' + id)\r\n      if (res.meta.status !== 200) return this.$message.error('删除用户失败！')\r\n      this.$message.success('删除用户成功！')\r\n      this.getUserList()\r\n    },\r\n    async setRole(userInfo) {\r\n      console.log(userInfo);\r\n      this.userInfo = userInfo\r\n      const {data: res} = await this.$http.get('roles')\r\n      if (res.meta.status !== 200) {\r\n        return this.$message.error(\"获取角色列表失败\")\r\n      }\r\n      this.rolesList = res.data\r\n      console.log(this.rolesList);\r\n      this.allotRoleDialogVisible = true\r\n    },\r\n   async saveRoleInfo() {\r\n      if (!this.selectedRoleId) {\r\n        return this.$message.error('请选择要分配的角色！')\r\n      }\r\n      const {data: res} = await this.$http.put(`users/${this.userInfo.id}/role`, {\r\n        rid: this.selectedRoleId})\r\n     if (res.meta.status !== 200) {\r\n       return this.$message.error('更新角色列表失败！')\r\n     }\r\n     this.$message.success('更新角色列表成功')\r\n     this.getUserList()\r\n     this.allotRoleDialogVisible = false\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}