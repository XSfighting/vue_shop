{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/13203/Desktop/\\u540E\\u53F0\\u7BA1\\u7406\\u7CFB\\u7EDF/vue_shop2/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: \"Order\",\n  data: function data() {\n    return {\n      queryInfo: {\n        query: '',\n        pagenum: 1,\n        pagesize: 10\n      },\n      orderList: [],\n      total: 0,\n      AddressVisible: false\n    };\n  },\n  created: function created() {\n    this.getOrderList();\n  },\n  methods: {\n    getOrderList: function getOrderList() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var _yield$_this$$http$ge, res;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _this.$http.get('orders', {\n                  params: _this.queryInfo\n                });\n\n              case 2:\n                _yield$_this$$http$ge = _context.sent;\n                res = _yield$_this$$http$ge.data;\n\n                if (!(res.meta.status !== 200)) {\n                  _context.next = 6;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", _this.$message.error('获取订单列表失败！'));\n\n              case 6:\n                // console.log(res);\n                _this.orderList = res.data.goods;\n                _this.total = res.data.total;\n                console.log(_this.orderList);\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n    handleSizeChange: function handleSizeChange(newSize) {\n      this.queryInfo.pagesize = newSize;\n      this.getOrderList();\n    },\n    handleCurrentChange: function handleCurrentChange(newPage) {\n      this.queryInfo.pagenum = this.getOrderList();\n    },\n    showBox: function showBox() {\n      this.AddressVisible = true;\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqEA;EACAA,aADA;EAEAC,IAFA,kBAEA;IACA;MACAC;QACAC,SADA;QAEAC,UAFA;QAGAC;MAHA,CADA;MAMAC,aANA;MAOAC,QAPA;MAQAC;IARA;EAUA,CAbA;EAcAC,OAdA,qBAcA;IACA;EACA,CAhBA;EAiBAC;IACAC,YADA,0BACA;MAAA;;MAAA;QAAA;;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACA;kBACAC;gBADA,EADA;;cAAA;gBAAA;gBACAC,GADA,yBACAZ,IADA;;gBAAA,MAGAY,uBAHA;kBAAA;kBAAA;gBAAA;;gBAAA,iCAGA,iCAHA;;cAAA;gBAIA;gBACA;gBACA;gBACAC;;cAPA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAQA,CATA;IAUAC,gBAVA,4BAUAC,OAVA,EAUA;MACA;MACA;IACA,CAbA;IAcAC,mBAdA,+BAcAC,OAdA,EAcA;MACA,yBACA,mBADA;IAEA,CAjBA;IAkBAC,OAlBA,qBAkBA;MACA;IACA;EApBA;AAjBA","names":["name","data","queryInfo","query","pagenum","pagesize","orderList","total","AddressVisible","created","methods","getOrderList","params","res","console","handleSizeChange","newSize","handleCurrentChange","newPage","showBox"],"sourceRoot":"src/components/order","sources":["Order.vue"],"sourcesContent":["<template>\r\n<div>\r\n  <!-- 面包屑导航区域 -->\r\n  <el-breadcrumb separator-class=\"el-icon-arrow-right\">\r\n    <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\r\n    <el-breadcrumb-item>订单管理</el-breadcrumb-item>\r\n    <el-breadcrumb-item>订单列表</el-breadcrumb-item>\r\n  </el-breadcrumb>\r\n\r\n <el-card>\r\n  <!--  搜索与添加区-->\r\n  <el-row>\r\n    <el-col :span=\"8\">\r\n      <el-input placeholder=\"请输入内容\" >\r\n        <el-button slot=\"append\" icon=\"el-icon-search\"></el-button>\r\n      </el-input>\r\n    </el-col>\r\n  </el-row>\r\n\r\n   <el-table :data=\"orderList\" stripe border >\r\n     <el-table-column type=\"index\"></el-table-column>\r\n     <el-table-column label=\"订单编号\" prop=\"order_number\"></el-table-column>\r\n     <el-table-column label=\"订单价格\" prop=\"order_price\"></el-table-column>\r\n     <el-table-column label=\"是否支付\" prop=\"pay_status\">\r\n       <template v-slot=\"scope\">\r\n         <el-tag type=\"success\" v-if=\"scope.row.pay_status == '1'\">已付款</el-tag>\r\n         <el-tag type=\"danger\" v-else>未付款</el-tag>\r\n       </template>\r\n     </el-table-column>\r\n     <el-table-column label=\"是否发货\" prop=\"is_send\"></el-table-column>\r\n     <el-table-column label=\"下单时间\" prop=\"create_time\">\r\n       <template v-slot=\"scope\">\r\n         {{scope.row.create_time | dateFormat}}\r\n       </template>\r\n     </el-table-column>\r\n     <el-table-column label=\"操作\">\r\n       <template v-slot=\"scope\">\r\n         <el-button type=\"primary\" icon=\"el-icon-edit\" size=\"mini\" @click=\"showBox\"></el-button>\r\n         <el-button type=\"success\" icon=\"el-icon-location\" size=\"mini\"></el-button>\r\n       </template>\r\n     </el-table-column>\r\n\r\n   </el-table>\r\n\r\n   <el-pagination\r\n       @size-change=\"handleSizeChange\"\r\n       @current-change=\"handleCurrentChange\"\r\n       :current-page=\"queryInfo.pagenum\"\r\n       :page-sizes=\"[10, 20, 30, 100]\"\r\n       :page-size=\"queryInfo.pagesize\"\r\n       layout=\"total, sizes, prev, pager, next, jumper\"\r\n       :total=\"total\">\r\n   </el-pagination>\r\n</el-card>\r\n\r\n  <el-dialog\r\n      title=\"修改地址\"\r\n      :visible.sync=\"AddressVisible\"\r\n      width=\"50%\">\r\n    <span>这是一段信息</span>\r\n    <span slot=\"footer\" class=\"dialog-footer\">\r\n    <el-button @click=\"AddressVisible = false\">取 消</el-button>\r\n    <el-button type=\"primary\" @click=\"AddressVisible = false\">确 定</el-button>\r\n  </span>\r\n  </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"Order\",\r\n  data() {\r\n    return {\r\n      queryInfo: {\r\n        query: '',\r\n        pagenum: 1,\r\n        pagesize: 10\r\n      },\r\n      orderList: [],\r\n      total: 0,\r\n      AddressVisible: false\r\n    }\r\n  },\r\n  created() {\r\n    this.getOrderList()\r\n  },\r\n  methods: {\r\n    async getOrderList() {\r\n     const {data: res} = await this.$http.get('orders',{\r\n       params: this.queryInfo})\r\n      if (res.meta.status !== 200) return this.$message.error('获取订单列表失败！')\r\n      // console.log(res);\r\n      this.orderList = res.data.goods\r\n      this.total = res.data.total\r\n      console.log(this.orderList);\r\n    },\r\n    handleSizeChange(newSize) {\r\n      this.queryInfo.pagesize = newSize\r\n      this.getOrderList()\r\n    },\r\n    handleCurrentChange(newPage) {\r\n      this.queryInfo.pagenum =\r\n          this.getOrderList()\r\n    },\r\n    showBox() {\r\n      this.AddressVisible = true\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}