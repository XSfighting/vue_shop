{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: \"login\",\n\n  data() {\n    return {\n      //这是登录表单的数据绑定对象\n      loginForm: {\n        username: 'admin',\n        password: '123456'\n      },\n      // 表单的验证规则对象\n      loginFormRules: {\n        // 验证用户名是否合法\n        username: [{\n          required: true,\n          message: '请输入用户名',\n          trigger: 'blur'\n        }, {\n          min: 3,\n          max: 10,\n          message: '长度在 3 到 10 个字符',\n          trigger: 'blur'\n        }],\n        // 验证密码是否合法\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }, {\n          min: 6,\n          max: 15,\n          message: '长度在 6 到 15 个字符',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n\n  methods: {\n    // 重置表单\n    resetLoginForm() {\n      this.$refs.loginFormRef.resetFields();\n    },\n\n    login() {\n      // valid参数是布尔值\n      this.$refs.loginFormRef.validate(async valid => {\n        // false:直接return，不发起请求；true:发起请求\n        if (!valid) return;\n        const {\n          data: res\n        } = await this.$http.post('login', this.loginForm);\n\n        if (res.meta.status !== 200) {\n          this.$message.error('登录失败!');\n        } else {\n          this.$message.success('登录成功！');\n        } // console.log(res);\n\n\n        window.sessionStorage.setItem('token', res.data.token);\n        this.$router.push('/home');\n      });\n    }\n\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA;EACAA,aADA;;EAEAC;IACA;MACA;MACAC;QACAC,iBADA;QAEAC;MAFA,CAFA;MAMA;MACAC;QACA;QACAF,WACA;UAAAG;UAAAC;UAAAC;QAAA,CADA,EAEA;UAAAC;UAAAC;UAAAH;UAAAC;QAAA,CAFA,CAFA;QAMA;QACAJ,WACA;UAAAE;UAAAC;UAAAC;QAAA,CADA,EAEA;UAAAC;UAAAC;UAAAH;UAAAC;QAAA,CAFA;MAPA;IAPA;EAoBA,CAvBA;;EAwBAG;IACA;IACAC;MACA;IACA,CAJA;;IAKAC;MACA;MACA;QACA;QACA;QACA;UAAAZ;QAAA;;QACA;UACA;QACA,CAFA,MAEA;UACA;QACA,CARA,CASA;;;QACAa;QACA;MACA,CAZA;IAaA;;EApBA;AAxBA","names":["name","data","loginForm","username","password","loginFormRules","required","message","trigger","min","max","methods","resetLoginForm","login","window"],"sourceRoot":"src/components","sources":["Login.vue"],"sourcesContent":["<template>\n<div class=\"login\">\n  <div class=\"login_box\">\n<!--    头像区域-->\n    <div class=\"avatar_box\">\n      <img src=\"../assets/img/logo.svg\" alt=\"\">\n    </div>\n<!--表单区区域-->\n    <el-form ref=\"loginFormRef\" :model=\"loginForm\" :rules=\"loginFormRules\" label-width=\"0px\" class=\"login_form\">\n      <!-- 用户名区域-->\n      <el-form-item prop=\"username\">\n        <el-input v-model=\"loginForm.username\" prefix-icon=\"el-icon-user\"></el-input>\n      </el-form-item>\n      <!-- 密码区域-->\n      <el-form-item prop=\"password\">\n        <el-input type=\"password\" v-model=\"loginForm.password\" prefix-icon=\"el-icon-lock\" ></el-input>\n      </el-form-item>\n      <!-- 按钮区域-->\n      <el-form-item class=\"btns\">\n        <el-button type=\"primary\" @click=\"login\">登录</el-button>\n        <el-button type=\"info\" @click=\"resetLoginForm()\" >重置</el-button>\n      </el-form-item>\n\n    </el-form>\n\n  </div>\n</div>\n</template>\n\n<script>\nexport default {\n  name: \"login\",\n  data() {\n    return {\n      //这是登录表单的数据绑定对象\n      loginForm: {\n        username: 'admin',\n        password: '123456'\n      },\n      // 表单的验证规则对象\n      loginFormRules: {\n        // 验证用户名是否合法\n        username: [\n            { required: true, message: '请输入用户名', trigger: 'blur' },\n            { min: 3, max: 10, message: '长度在 3 到 10 个字符', trigger: 'blur' }\n        ],\n        // 验证密码是否合法\n        password: [\n          { required: true, message: '请输入密码', trigger: 'blur' },\n          { min: 6, max: 15, message: '长度在 6 到 15 个字符', trigger: 'blur' }\n        ]\n      }\n    }\n  },\n  methods: {\n    // 重置表单\n    resetLoginForm() {\n      this.$refs.loginFormRef.resetFields()\n    },\n    login() {\n      // valid参数是布尔值\n      this.$refs.loginFormRef.validate(async valid=>{\n        // false:直接return，不发起请求；true:发起请求\n        if (!valid) return;\n       const {data: res} = await this.$http.post('login',this.loginForm);\n        if(res.meta.status !== 200) {\n          this.$message.error('登录失败!');\n        } else {\n          this.$message.success('登录成功！')\n        }\n        // console.log(res);\n        window.sessionStorage.setItem('token',res.data.token)\n        this.$router.push('/home');\n      })\n    }\n  }\n}\n</script>\n\n<style scoped>\n.login {\n  /*flex弹性布局水平垂直居中,一般用于移动端*/\n  /*display: flex;*/\n  /*justify-content: center;*/\n  /*align-items: center;*/\n  background-color: #2b4b6b;\n  height: 100%;\n}\n.login_box {\n  /*定位水平居中*/\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  /*margin-top: -150px;*/\n  /*margin-left: -225px;*/\n  transform: translate(-50%,-50%);\n  width: 450px;\n  height: 300px;\n  background-color: #fff;\n  border-radius: 5px;\n}\n.avatar_box {\n  position: absolute;\n  left: 50%;\n  padding: 10px;\n  transform: translate(-50%,-50%);\n  width: 130px;\n  height: 130px;\n  border: 1px solid #eee;\n  border-radius: 50%;\n  box-shadow: 0 0 10px rgba(100,100,100,.1);\n  background-color: #fff;\n}\n.avatar_box img {\n  width: 100%;\n  height: 100%;\n  background-color: #eee;\n  border-radius: 50%;\n}\n.login_form {\n  position: absolute;\n  bottom: 0;\n  left: 50%;\n  transform: translate(-50%);\n  width: 100%;\n  padding: 0 20px;\n  box-sizing: border-box;\n}\n.btns {\n  display: flex;\n  justify-content: flex-end;\n}\n\n</style>"]},"metadata":{},"sourceType":"module"}