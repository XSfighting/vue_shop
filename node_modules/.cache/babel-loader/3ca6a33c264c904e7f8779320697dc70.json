{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/13203/Desktop/\\u540E\\u53F0\\u7BA1\\u7406\\u7CFB\\u7EDF/vue_shop2/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      // 查询参数对象\n      queryInfo: {\n        query: '',\n        pagenum: 1,\n        pagesize: 10\n      },\n      // 商品列表\n      goodslist: [],\n      // 总数据条数\n      total: 0\n    };\n  },\n  created: function created() {\n    this.getGoodsList();\n  },\n  methods: {\n    // 根据分页获取对应的商品列表\n    getGoodsList: function getGoodsList() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var _yield$_this$$http$ge, res;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _this.$http.get('goods', {\n                  params: _this.queryInfo\n                });\n\n              case 2:\n                _yield$_this$$http$ge = _context.sent;\n                res = _yield$_this$$http$ge.data;\n\n                if (!(res.meta.status !== 200)) {\n                  _context.next = 6;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", _this.$message.error('获取商品列表失败！'));\n\n              case 6:\n                _this.$message.success('获取商品列表成功！'); // console.log(res.data)\n\n\n                _this.goodslist = res.data.goods;\n                _this.total = res.data.total;\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n    handleSizeChange: function handleSizeChange(newSize) {\n      this.queryInfo.pagesize = newSize;\n      this.getGoodsList();\n    },\n    handleCurrentChange: function handleCurrentChange(newPage) {\n      this.queryInfo.pagenum = newPage;\n      this.getGoodsList();\n    },\n    removeById: function removeById(id) {\n      var _this2 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var confirmResult, _yield$_this2$$http$d, res;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return _this2.$confirm('此操作将永久删除该商品, 是否继续?', '提示', {\n                  confirmButtonText: '确定',\n                  cancelButtonText: '取消',\n                  type: 'warning'\n                }).catch(function (err) {\n                  return err;\n                });\n\n              case 2:\n                confirmResult = _context2.sent;\n\n                if (!(confirmResult !== 'confirm')) {\n                  _context2.next = 5;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", _this2.$message.info('已经取消删除！'));\n\n              case 5:\n                _context2.next = 7;\n                return _this2.$http.delete(\"goods/\".concat(id));\n\n              case 7:\n                _yield$_this2$$http$d = _context2.sent;\n                res = _yield$_this2$$http$d.data;\n\n                if (!(res.meta.status !== 200)) {\n                  _context2.next = 11;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", _this2.$message.error('删除失败！'));\n\n              case 11:\n                _this2.$message.success('删除成功！');\n\n                _this2.getGoodsList();\n\n              case 13:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    },\n    goAddpage: function goAddpage() {\n      this.$router.push('/goods/add');\n    },\n    showEditDialogue: function showEditDialogue() {}\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiDA;EACAA,IADA,kBACA;IACA;MACA;MACAC;QACAC,SADA;QAEAC,UAFA;QAGAC;MAHA,CAFA;MAOA;MACAC,aARA;MASA;MACAC;IAVA;EAYA,CAdA;EAeAC,OAfA,qBAeA;IACA;EACA,CAjBA;EAkBAC;IACA;IACAC,YAFA,0BAEA;MAAA;;MAAA;QAAA;;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACA;kBACAC;gBADA,EADA;;cAAA;gBAAA;gBACAC,GADA,yBACAX,IADA;;gBAAA,MAKAW,uBALA;kBAAA;kBAAA;gBAAA;;gBAAA,iCAMA,iCANA;;cAAA;gBASA,oCATA,CAUA;;;gBACA;gBACA;;cAZA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAaA,CAfA;IAgBAC,gBAhBA,4BAgBAC,OAhBA,EAgBA;MACA;MACA;IACA,CAnBA;IAoBAC,mBApBA,+BAoBAC,OApBA,EAoBA;MACA;MACA;IACA,CAvBA;IAwBAC,UAxBA,sBAwBAC,EAxBA,EAwBA;MAAA;;MAAA;QAAA;;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACA,gBACA,oBADA,EAEA,IAFA,EAGA;kBACAC,uBADA;kBAEAC,sBAFA;kBAGAC;gBAHA,CAHA,EAQAC,KARA,CAQA;kBAAA;gBAAA,CARA,CADA;;cAAA;gBACAC,aADA;;gBAAA,MAWAA,2BAXA;kBAAA;kBAAA;gBAAA;;gBAAA,kCAYA,+BAZA;;cAAA;gBAAA;gBAAA,OAcA,wCAdA;;cAAA;gBAAA;gBAcAX,GAdA,yBAcAX,IAdA;;gBAAA,MAgBAW,uBAhBA;kBAAA;kBAAA;gBAAA;;gBAAA,kCAiBA,8BAjBA;;cAAA;gBAmBA;;gBACA;;cApBA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAqBA,CA7CA;IA8CAY,SA9CA,uBA8CA;MACA;IACA,CAhDA;IAiDAC,gBAjDA,8BAiDA,CAEA;EAnDA;AAlBA","names":["data","queryInfo","query","pagenum","pagesize","goodslist","total","created","methods","getGoodsList","params","res","handleSizeChange","newSize","handleCurrentChange","newPage","removeById","id","confirmButtonText","cancelButtonText","type","catch","confirmResult","goAddpage","showEditDialogue"],"sourceRoot":"src/components/goods","sources":["List.vue"],"sourcesContent":["<template>\n  <div>\n    <!-- 面包屑导航区域 -->\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\n      <el-breadcrumb-item>商品管理</el-breadcrumb-item>\n      <el-breadcrumb-item>商品列表</el-breadcrumb-item>\n    </el-breadcrumb>\n\n    <!-- 卡片视图区域 -->\n    <el-card>\n      <el-row :gutter=\"20\">\n        <el-col :span=\"8\">\n          <el-input placeholder=\"请输入内容\" v-model=\"queryInfo.query\" clearable @clear=\"getGoodsList\">\n            <el-button slot=\"append\" icon=\"el-icon-search\" @click=\"getGoodsList\"></el-button>\n          </el-input>\n        </el-col>\n        <el-col :span=\"4\">\n          <el-button type=\"primary\" @click=\"goAddpage\">添加商品</el-button>\n        </el-col>\n      </el-row>\n\n      <!-- table表格区域 -->\n      <el-table :data=\"goodslist\" border stripe>\n        <el-table-column type=\"index\"></el-table-column>\n        <el-table-column label=\"商品名称\" prop=\"goods_name\"></el-table-column>\n        <el-table-column label=\"商品价格(元)\" prop=\"goods_price\" width=\"95px\"></el-table-column>\n        <el-table-column label=\"商品重量\" prop=\"goods_weight\" width=\"70px\"></el-table-column>\n        <el-table-column label=\"创建时间\" prop=\"add_time\" width=\"140px\">\n          <template v-slot=\"scope\">\n            {{scope.row.add_time | dateFormat}}\n          </template>\n        </el-table-column>\n        <el-table-column label=\"操作\" width=\"130px\">\n          <template slot-scope=\"scope\">\n            <el-button type=\"primary\" icon=\"el-icon-edit\" size=\"mini\" @click=\"showEditDialogue\"></el-button>\n            <el-button type=\"danger\" icon=\"el-icon-delete\" size=\"mini\" @click=\"removeById(scope.row.goods_id)\"></el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n\n      <!-- 分页区域 -->\n      <el-pagination @size-change=\"handleSizeChange\" @current-change=\"handleCurrentChange\" :current-page=\"queryInfo.pagenum\" :page-sizes=\"[5, 10, 15, 20]\" :page-size=\"queryInfo.pagesize\" layout=\"total, sizes, prev, pager, next, jumper\" :total=\"total\" background>\n      </el-pagination>\n    </el-card>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      // 查询参数对象\n      queryInfo: {\n        query: '',\n        pagenum: 1,\n        pagesize: 10\n      },\n      // 商品列表\n      goodslist: [],\n      // 总数据条数\n      total: 0\n    }\n  },\n  created() {\n    this.getGoodsList()\n  },\n  methods: {\n    // 根据分页获取对应的商品列表\n    async getGoodsList() {\n      const { data: res } = await this.$http.get('goods', {\n        params: this.queryInfo\n      })\n\n      if (res.meta.status !== 200) {\n        return this.$message.error('获取商品列表失败！')\n      }\n\n      this.$message.success('获取商品列表成功！')\n      // console.log(res.data)\n      this.goodslist = res.data.goods\n      this.total = res.data.total\n    },\n    handleSizeChange(newSize) {\n      this.queryInfo.pagesize = newSize\n      this.getGoodsList()\n    },\n    handleCurrentChange(newPage) {\n      this.queryInfo.pagenum = newPage\n      this.getGoodsList()\n    },\n    async removeById(id) {\n      const confirmResult = await this.$confirm(\n          '此操作将永久删除该商品, 是否继续?',\n          '提示',\n          {\n            confirmButtonText: '确定',\n            cancelButtonText: '取消',\n            type: 'warning'\n          }\n      ).catch(err => err)\n\n      if (confirmResult !== 'confirm') {\n        return this.$message.info('已经取消删除！')\n      }\n      const { data: res } = await this.$http.delete(`goods/${id}`)\n\n      if (res.meta.status !== 200) {\n        return this.$message.error('删除失败！')\n      }\n      this.$message.success('删除成功！')\n      this.getGoodsList()\n    },\n    goAddpage() {\n      this.$router.push('/goods/add')\n    },\n    showEditDialogue() {\n      \n    }\n  }\n}\n</script>\n\n<style scoped>\n</style>"]},"metadata":{},"sourceType":"module"}