{"ast":null,"code":"import { devicePixelRatio } from '../config.js';\nimport * as util from '../core/util.js';\nimport Layer from './Layer.js';\nimport requestAnimationFrame from '../animation/requestAnimationFrame.js';\nimport env from '../core/env.js';\nimport { brush, brushSingle } from './graphic.js';\nimport { REDRAW_BIT } from '../graphic/constants.js';\nimport { getSize } from './helper.js';\nvar HOVER_LAYER_ZLEVEL = 1e5;\nvar CANVAS_ZLEVEL = 314159;\nvar EL_AFTER_INCREMENTAL_INC = 0.01;\nvar INCREMENTAL_INC = 0.001;\n\nfunction isLayerValid(layer) {\n  if (!layer) {\n    return false;\n  }\n\n  if (layer.__builtin__) {\n    return true;\n  }\n\n  if (typeof layer.resize !== 'function' || typeof layer.refresh !== 'function') {\n    return false;\n  }\n\n  return true;\n}\n\nfunction createRoot(width, height) {\n  var domRoot = document.createElement('div');\n  domRoot.style.cssText = ['position:relative', 'width:' + width + 'px', 'height:' + height + 'px', 'padding:0', 'margin:0', 'border-width:0'].join(';') + ';';\n  return domRoot;\n}\n\nvar CanvasPainter = function () {\n  function CanvasPainter(root, storage, opts, id) {\n    this.type = 'canvas';\n    this._zlevelList = [];\n    this._prevDisplayList = [];\n    this._layers = {};\n    this._layerConfig = {};\n    this._needsManuallyCompositing = false;\n    this.type = 'canvas';\n    var singleCanvas = !root.nodeName || root.nodeName.toUpperCase() === 'CANVAS';\n    this._opts = opts = util.extend({}, opts || {});\n    this.dpr = opts.devicePixelRatio || devicePixelRatio;\n    this._singleCanvas = singleCanvas;\n    this.root = root;\n    var rootStyle = root.style;\n\n    if (rootStyle) {\n      util.disableUserSelect(root);\n      root.innerHTML = '';\n    }\n\n    this.storage = storage;\n    var zlevelList = this._zlevelList;\n    this._prevDisplayList = [];\n    var layers = this._layers;\n\n    if (!singleCanvas) {\n      this._width = getSize(root, 0, opts);\n      this._height = getSize(root, 1, opts);\n      var domRoot = this._domRoot = createRoot(this._width, this._height);\n      root.appendChild(domRoot);\n    } else {\n      var rootCanvas = root;\n      var width = rootCanvas.width;\n      var height = rootCanvas.height;\n\n      if (opts.width != null) {\n        width = opts.width;\n      }\n\n      if (opts.height != null) {\n        height = opts.height;\n      }\n\n      this.dpr = opts.devicePixelRatio || 1;\n      rootCanvas.width = width * this.dpr;\n      rootCanvas.height = height * this.dpr;\n      this._width = width;\n      this._height = height;\n      var mainLayer = new Layer(rootCanvas, this, this.dpr);\n      mainLayer.__builtin__ = true;\n      mainLayer.initContext();\n      layers[CANVAS_ZLEVEL] = mainLayer;\n      mainLayer.zlevel = CANVAS_ZLEVEL;\n      zlevelList.push(CANVAS_ZLEVEL);\n      this._domRoot = root;\n    }\n  }\n\n  CanvasPainter.prototype.getType = function () {\n    return 'canvas';\n  };\n\n  CanvasPainter.prototype.isSingleCanvas = function () {\n    return this._singleCanvas;\n  };\n\n  CanvasPainter.prototype.getViewportRoot = function () {\n    return this._domRoot;\n  };\n\n  CanvasPainter.prototype.getViewportRootOffset = function () {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  };\n\n  CanvasPainter.prototype.refresh = function (paintAll) {\n    var list = this.storage.getDisplayList(true);\n    var prevList = this._prevDisplayList;\n    var zlevelList = this._zlevelList;\n    this._redrawId = Math.random();\n\n    this._paintList(list, prevList, paintAll, this._redrawId);\n\n    for (var i = 0; i < zlevelList.length; i++) {\n      var z = zlevelList[i];\n      var layer = this._layers[z];\n\n      if (!layer.__builtin__ && layer.refresh) {\n        var clearColor = i === 0 ? this._backgroundColor : null;\n        layer.refresh(clearColor);\n      }\n    }\n\n    if (this._opts.useDirtyRect) {\n      this._prevDisplayList = list.slice();\n    }\n\n    return this;\n  };\n\n  CanvasPainter.prototype.refreshHover = function () {\n    this._paintHoverList(this.storage.getDisplayList(false));\n  };\n\n  CanvasPainter.prototype._paintHoverList = function (list) {\n    var len = list.length;\n    var hoverLayer = this._hoverlayer;\n    hoverLayer && hoverLayer.clear();\n\n    if (!len) {\n      return;\n    }\n\n    var scope = {\n      inHover: true,\n      viewWidth: this._width,\n      viewHeight: this._height\n    };\n    var ctx;\n\n    for (var i = 0; i < len; i++) {\n      var el = list[i];\n\n      if (el.__inHover) {\n        if (!hoverLayer) {\n          hoverLayer = this._hoverlayer = this.getLayer(HOVER_LAYER_ZLEVEL);\n        }\n\n        if (!ctx) {\n          ctx = hoverLayer.ctx;\n          ctx.save();\n        }\n\n        brush(ctx, el, scope, i === len - 1);\n      }\n    }\n\n    if (ctx) {\n      ctx.restore();\n    }\n  };\n\n  CanvasPainter.prototype.getHoverLayer = function () {\n    return this.getLayer(HOVER_LAYER_ZLEVEL);\n  };\n\n  CanvasPainter.prototype.paintOne = function (ctx, el) {\n    brushSingle(ctx, el);\n  };\n\n  CanvasPainter.prototype._paintList = function (list, prevList, paintAll, redrawId) {\n    if (this._redrawId !== redrawId) {\n      return;\n    }\n\n    paintAll = paintAll || false;\n\n    this._updateLayerStatus(list);\n\n    var _a = this._doPaintList(list, prevList, paintAll),\n        finished = _a.finished,\n        needsRefreshHover = _a.needsRefreshHover;\n\n    if (this._needsManuallyCompositing) {\n      this._compositeManually();\n    }\n\n    if (needsRefreshHover) {\n      this._paintHoverList(list);\n    }\n\n    if (!finished) {\n      var self_1 = this;\n      requestAnimationFrame(function () {\n        self_1._paintList(list, prevList, paintAll, redrawId);\n      });\n    } else {\n      this.eachLayer(function (layer) {\n        layer.afterBrush && layer.afterBrush();\n      });\n    }\n  };\n\n  CanvasPainter.prototype._compositeManually = function () {\n    var ctx = this.getLayer(CANVAS_ZLEVEL).ctx;\n    var width = this._domRoot.width;\n    var height = this._domRoot.height;\n    ctx.clearRect(0, 0, width, height);\n    this.eachBuiltinLayer(function (layer) {\n      if (layer.virtual) {\n        ctx.drawImage(layer.dom, 0, 0, width, height);\n      }\n    });\n  };\n\n  CanvasPainter.prototype._doPaintList = function (list, prevList, paintAll) {\n    var _this = this;\n\n    var layerList = [];\n    var useDirtyRect = this._opts.useDirtyRect;\n\n    for (var zi = 0; zi < this._zlevelList.length; zi++) {\n      var zlevel = this._zlevelList[zi];\n      var layer = this._layers[zlevel];\n\n      if (layer.__builtin__ && layer !== this._hoverlayer && (layer.__dirty || paintAll)) {\n        layerList.push(layer);\n      }\n    }\n\n    var finished = true;\n    var needsRefreshHover = false;\n\n    var _loop_1 = function (k) {\n      var layer = layerList[k];\n      var ctx = layer.ctx;\n      var repaintRects = useDirtyRect && layer.createRepaintRects(list, prevList, this_1._width, this_1._height);\n      var start = paintAll ? layer.__startIndex : layer.__drawIndex;\n      var useTimer = !paintAll && layer.incremental && Date.now;\n      var startTime = useTimer && Date.now();\n      var clearColor = layer.zlevel === this_1._zlevelList[0] ? this_1._backgroundColor : null;\n\n      if (layer.__startIndex === layer.__endIndex) {\n        layer.clear(false, clearColor, repaintRects);\n      } else if (start === layer.__startIndex) {\n        var firstEl = list[start];\n\n        if (!firstEl.incremental || !firstEl.notClear || paintAll) {\n          layer.clear(false, clearColor, repaintRects);\n        }\n      }\n\n      if (start === -1) {\n        start = layer.__startIndex;\n      }\n\n      var i;\n\n      var repaint = function (repaintRect) {\n        var scope = {\n          inHover: false,\n          allClipped: false,\n          prevEl: null,\n          viewWidth: _this._width,\n          viewHeight: _this._height\n        };\n\n        for (i = start; i < layer.__endIndex; i++) {\n          var el = list[i];\n\n          if (el.__inHover) {\n            needsRefreshHover = true;\n          }\n\n          _this._doPaintEl(el, layer, useDirtyRect, repaintRect, scope, i === layer.__endIndex - 1);\n\n          if (useTimer) {\n            var dTime = Date.now() - startTime;\n\n            if (dTime > 15) {\n              break;\n            }\n          }\n        }\n\n        if (scope.prevElClipPaths) {\n          ctx.restore();\n        }\n      };\n\n      if (repaintRects) {\n        if (repaintRects.length === 0) {\n          i = layer.__endIndex;\n        } else {\n          var dpr = this_1.dpr;\n\n          for (var r = 0; r < repaintRects.length; ++r) {\n            var rect = repaintRects[r];\n            ctx.save();\n            ctx.beginPath();\n            ctx.rect(rect.x * dpr, rect.y * dpr, rect.width * dpr, rect.height * dpr);\n            ctx.clip();\n            repaint(rect);\n            ctx.restore();\n          }\n        }\n      } else {\n        ctx.save();\n        repaint();\n        ctx.restore();\n      }\n\n      layer.__drawIndex = i;\n\n      if (layer.__drawIndex < layer.__endIndex) {\n        finished = false;\n      }\n    };\n\n    var this_1 = this;\n\n    for (var k = 0; k < layerList.length; k++) {\n      _loop_1(k);\n    }\n\n    if (env.wxa) {\n      util.each(this._layers, function (layer) {\n        if (layer && layer.ctx && layer.ctx.draw) {\n          layer.ctx.draw();\n        }\n      });\n    }\n\n    return {\n      finished: finished,\n      needsRefreshHover: needsRefreshHover\n    };\n  };\n\n  CanvasPainter.prototype._doPaintEl = function (el, currentLayer, useDirtyRect, repaintRect, scope, isLast) {\n    var ctx = currentLayer.ctx;\n\n    if (useDirtyRect) {\n      var paintRect = el.getPaintRect();\n\n      if (!repaintRect || paintRect && paintRect.intersect(repaintRect)) {\n        brush(ctx, el, scope, isLast);\n        el.setPrevPaintRect(paintRect);\n      }\n    } else {\n      brush(ctx, el, scope, isLast);\n    }\n  };\n\n  CanvasPainter.prototype.getLayer = function (zlevel, virtual) {\n    if (this._singleCanvas && !this._needsManuallyCompositing) {\n      zlevel = CANVAS_ZLEVEL;\n    }\n\n    var layer = this._layers[zlevel];\n\n    if (!layer) {\n      layer = new Layer('zr_' + zlevel, this, this.dpr);\n      layer.zlevel = zlevel;\n      layer.__builtin__ = true;\n\n      if (this._layerConfig[zlevel]) {\n        util.merge(layer, this._layerConfig[zlevel], true);\n      } else if (this._layerConfig[zlevel - EL_AFTER_INCREMENTAL_INC]) {\n        util.merge(layer, this._layerConfig[zlevel - EL_AFTER_INCREMENTAL_INC], true);\n      }\n\n      if (virtual) {\n        layer.virtual = virtual;\n      }\n\n      this.insertLayer(zlevel, layer);\n      layer.initContext();\n    }\n\n    return layer;\n  };\n\n  CanvasPainter.prototype.insertLayer = function (zlevel, layer) {\n    var layersMap = this._layers;\n    var zlevelList = this._zlevelList;\n    var len = zlevelList.length;\n    var domRoot = this._domRoot;\n    var prevLayer = null;\n    var i = -1;\n\n    if (layersMap[zlevel]) {\n      if (process.env.NODE_ENV !== 'production') {\n        util.logError('ZLevel ' + zlevel + ' has been used already');\n      }\n\n      return;\n    }\n\n    if (!isLayerValid(layer)) {\n      if (process.env.NODE_ENV !== 'production') {\n        util.logError('Layer of zlevel ' + zlevel + ' is not valid');\n      }\n\n      return;\n    }\n\n    if (len > 0 && zlevel > zlevelList[0]) {\n      for (i = 0; i < len - 1; i++) {\n        if (zlevelList[i] < zlevel && zlevelList[i + 1] > zlevel) {\n          break;\n        }\n      }\n\n      prevLayer = layersMap[zlevelList[i]];\n    }\n\n    zlevelList.splice(i + 1, 0, zlevel);\n    layersMap[zlevel] = layer;\n\n    if (!layer.virtual) {\n      if (prevLayer) {\n        var prevDom = prevLayer.dom;\n\n        if (prevDom.nextSibling) {\n          domRoot.insertBefore(layer.dom, prevDom.nextSibling);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      } else {\n        if (domRoot.firstChild) {\n          domRoot.insertBefore(layer.dom, domRoot.firstChild);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      }\n    }\n\n    layer.__painter = this;\n  };\n\n  CanvasPainter.prototype.eachLayer = function (cb, context) {\n    var zlevelList = this._zlevelList;\n\n    for (var i = 0; i < zlevelList.length; i++) {\n      var z = zlevelList[i];\n      cb.call(context, this._layers[z], z);\n    }\n  };\n\n  CanvasPainter.prototype.eachBuiltinLayer = function (cb, context) {\n    var zlevelList = this._zlevelList;\n\n    for (var i = 0; i < zlevelList.length; i++) {\n      var z = zlevelList[i];\n      var layer = this._layers[z];\n\n      if (layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  };\n\n  CanvasPainter.prototype.eachOtherLayer = function (cb, context) {\n    var zlevelList = this._zlevelList;\n\n    for (var i = 0; i < zlevelList.length; i++) {\n      var z = zlevelList[i];\n      var layer = this._layers[z];\n\n      if (!layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  };\n\n  CanvasPainter.prototype.getLayers = function () {\n    return this._layers;\n  };\n\n  CanvasPainter.prototype._updateLayerStatus = function (list) {\n    this.eachBuiltinLayer(function (layer, z) {\n      layer.__dirty = layer.__used = false;\n    });\n\n    function updatePrevLayer(idx) {\n      if (prevLayer) {\n        if (prevLayer.__endIndex !== idx) {\n          prevLayer.__dirty = true;\n        }\n\n        prevLayer.__endIndex = idx;\n      }\n    }\n\n    if (this._singleCanvas) {\n      for (var i_1 = 1; i_1 < list.length; i_1++) {\n        var el = list[i_1];\n\n        if (el.zlevel !== list[i_1 - 1].zlevel || el.incremental) {\n          this._needsManuallyCompositing = true;\n          break;\n        }\n      }\n    }\n\n    var prevLayer = null;\n    var incrementalLayerCount = 0;\n    var prevZlevel;\n    var i;\n\n    for (i = 0; i < list.length; i++) {\n      var el = list[i];\n      var zlevel = el.zlevel;\n      var layer = void 0;\n\n      if (prevZlevel !== zlevel) {\n        prevZlevel = zlevel;\n        incrementalLayerCount = 0;\n      }\n\n      if (el.incremental) {\n        layer = this.getLayer(zlevel + INCREMENTAL_INC, this._needsManuallyCompositing);\n        layer.incremental = true;\n        incrementalLayerCount = 1;\n      } else {\n        layer = this.getLayer(zlevel + (incrementalLayerCount > 0 ? EL_AFTER_INCREMENTAL_INC : 0), this._needsManuallyCompositing);\n      }\n\n      if (!layer.__builtin__) {\n        util.logError('ZLevel ' + zlevel + ' has been used by unkown layer ' + layer.id);\n      }\n\n      if (layer !== prevLayer) {\n        layer.__used = true;\n\n        if (layer.__startIndex !== i) {\n          layer.__dirty = true;\n        }\n\n        layer.__startIndex = i;\n\n        if (!layer.incremental) {\n          layer.__drawIndex = i;\n        } else {\n          layer.__drawIndex = -1;\n        }\n\n        updatePrevLayer(i);\n        prevLayer = layer;\n      }\n\n      if (el.__dirty & REDRAW_BIT && !el.__inHover) {\n        layer.__dirty = true;\n\n        if (layer.incremental && layer.__drawIndex < 0) {\n          layer.__drawIndex = i;\n        }\n      }\n    }\n\n    updatePrevLayer(i);\n    this.eachBuiltinLayer(function (layer, z) {\n      if (!layer.__used && layer.getElementCount() > 0) {\n        layer.__dirty = true;\n        layer.__startIndex = layer.__endIndex = layer.__drawIndex = 0;\n      }\n\n      if (layer.__dirty && layer.__drawIndex < 0) {\n        layer.__drawIndex = layer.__startIndex;\n      }\n    });\n  };\n\n  CanvasPainter.prototype.clear = function () {\n    this.eachBuiltinLayer(this._clearLayer);\n    return this;\n  };\n\n  CanvasPainter.prototype._clearLayer = function (layer) {\n    layer.clear();\n  };\n\n  CanvasPainter.prototype.setBackgroundColor = function (backgroundColor) {\n    this._backgroundColor = backgroundColor;\n    util.each(this._layers, function (layer) {\n      layer.setUnpainted();\n    });\n  };\n\n  CanvasPainter.prototype.configLayer = function (zlevel, config) {\n    if (config) {\n      var layerConfig = this._layerConfig;\n\n      if (!layerConfig[zlevel]) {\n        layerConfig[zlevel] = config;\n      } else {\n        util.merge(layerConfig[zlevel], config, true);\n      }\n\n      for (var i = 0; i < this._zlevelList.length; i++) {\n        var _zlevel = this._zlevelList[i];\n\n        if (_zlevel === zlevel || _zlevel === zlevel + EL_AFTER_INCREMENTAL_INC) {\n          var layer = this._layers[_zlevel];\n          util.merge(layer, layerConfig[zlevel], true);\n        }\n      }\n    }\n  };\n\n  CanvasPainter.prototype.delLayer = function (zlevel) {\n    var layers = this._layers;\n    var zlevelList = this._zlevelList;\n    var layer = layers[zlevel];\n\n    if (!layer) {\n      return;\n    }\n\n    layer.dom.parentNode.removeChild(layer.dom);\n    delete layers[zlevel];\n    zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n  };\n\n  CanvasPainter.prototype.resize = function (width, height) {\n    if (!this._domRoot.style) {\n      if (width == null || height == null) {\n        return;\n      }\n\n      this._width = width;\n      this._height = height;\n      this.getLayer(CANVAS_ZLEVEL).resize(width, height);\n    } else {\n      var domRoot = this._domRoot;\n      domRoot.style.display = 'none';\n      var opts = this._opts;\n      var root = this.root;\n      width != null && (opts.width = width);\n      height != null && (opts.height = height);\n      width = getSize(root, 0, opts);\n      height = getSize(root, 1, opts);\n      domRoot.style.display = '';\n\n      if (this._width !== width || height !== this._height) {\n        domRoot.style.width = width + 'px';\n        domRoot.style.height = height + 'px';\n\n        for (var id in this._layers) {\n          if (this._layers.hasOwnProperty(id)) {\n            this._layers[id].resize(width, height);\n          }\n        }\n\n        this.refresh(true);\n      }\n\n      this._width = width;\n      this._height = height;\n    }\n\n    return this;\n  };\n\n  CanvasPainter.prototype.clearLayer = function (zlevel) {\n    var layer = this._layers[zlevel];\n\n    if (layer) {\n      layer.clear();\n    }\n  };\n\n  CanvasPainter.prototype.dispose = function () {\n    this.root.innerHTML = '';\n    this.root = this.storage = this._domRoot = this._layers = null;\n  };\n\n  CanvasPainter.prototype.getRenderedCanvas = function (opts) {\n    opts = opts || {};\n\n    if (this._singleCanvas && !this._compositeManually) {\n      return this._layers[CANVAS_ZLEVEL].dom;\n    }\n\n    var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n    imageLayer.initContext();\n    imageLayer.clear(false, opts.backgroundColor || this._backgroundColor);\n    var ctx = imageLayer.ctx;\n\n    if (opts.pixelRatio <= this.dpr) {\n      this.refresh();\n      var width_1 = imageLayer.dom.width;\n      var height_1 = imageLayer.dom.height;\n      this.eachLayer(function (layer) {\n        if (layer.__builtin__) {\n          ctx.drawImage(layer.dom, 0, 0, width_1, height_1);\n        } else if (layer.renderToCanvas) {\n          ctx.save();\n          layer.renderToCanvas(ctx);\n          ctx.restore();\n        }\n      });\n    } else {\n      var scope = {\n        inHover: false,\n        viewWidth: this._width,\n        viewHeight: this._height\n      };\n      var displayList = this.storage.getDisplayList(true);\n\n      for (var i = 0, len = displayList.length; i < len; i++) {\n        var el = displayList[i];\n        brush(ctx, el, scope, i === len - 1);\n      }\n    }\n\n    return imageLayer.dom;\n  };\n\n  CanvasPainter.prototype.getWidth = function () {\n    return this._width;\n  };\n\n  CanvasPainter.prototype.getHeight = function () {\n    return this._height;\n  };\n\n  return CanvasPainter;\n}();\n\nexport default CanvasPainter;\n;","map":{"version":3,"names":["devicePixelRatio","util","Layer","requestAnimationFrame","env","brush","brushSingle","REDRAW_BIT","getSize","HOVER_LAYER_ZLEVEL","CANVAS_ZLEVEL","EL_AFTER_INCREMENTAL_INC","INCREMENTAL_INC","isLayerValid","layer","__builtin__","resize","refresh","createRoot","width","height","domRoot","document","createElement","style","cssText","join","CanvasPainter","root","storage","opts","id","type","_zlevelList","_prevDisplayList","_layers","_layerConfig","_needsManuallyCompositing","singleCanvas","nodeName","toUpperCase","_opts","extend","dpr","_singleCanvas","rootStyle","disableUserSelect","innerHTML","zlevelList","layers","_width","_height","_domRoot","appendChild","rootCanvas","mainLayer","initContext","zlevel","push","prototype","getType","isSingleCanvas","getViewportRoot","getViewportRootOffset","viewportRoot","offsetLeft","offsetTop","paintAll","list","getDisplayList","prevList","_redrawId","Math","random","_paintList","i","length","z","clearColor","_backgroundColor","useDirtyRect","slice","refreshHover","_paintHoverList","len","hoverLayer","_hoverlayer","clear","scope","inHover","viewWidth","viewHeight","ctx","el","__inHover","getLayer","save","restore","getHoverLayer","paintOne","redrawId","_updateLayerStatus","_a","_doPaintList","finished","needsRefreshHover","_compositeManually","self_1","eachLayer","afterBrush","clearRect","eachBuiltinLayer","virtual","drawImage","dom","_this","layerList","zi","__dirty","_loop_1","k","repaintRects","createRepaintRects","this_1","start","__startIndex","__drawIndex","useTimer","incremental","Date","now","startTime","__endIndex","firstEl","notClear","repaint","repaintRect","allClipped","prevEl","_doPaintEl","dTime","prevElClipPaths","r","rect","beginPath","x","y","clip","wxa","each","draw","currentLayer","isLast","paintRect","getPaintRect","intersect","setPrevPaintRect","merge","insertLayer","layersMap","prevLayer","process","NODE_ENV","logError","splice","prevDom","nextSibling","insertBefore","firstChild","__painter","cb","context","call","eachOtherLayer","getLayers","__used","updatePrevLayer","idx","i_1","incrementalLayerCount","prevZlevel","getElementCount","_clearLayer","setBackgroundColor","backgroundColor","setUnpainted","configLayer","config","layerConfig","_zlevel","delLayer","parentNode","removeChild","indexOf","display","hasOwnProperty","clearLayer","dispose","getRenderedCanvas","imageLayer","pixelRatio","width_1","height_1","renderToCanvas","displayList","getWidth","getHeight"],"sources":["C:/Users/13203/Desktop/后台管理系统/vue_shop2/node_modules/zrender/lib/canvas/Painter.js"],"sourcesContent":["import { devicePixelRatio } from '../config.js';\nimport * as util from '../core/util.js';\nimport Layer from './Layer.js';\nimport requestAnimationFrame from '../animation/requestAnimationFrame.js';\nimport env from '../core/env.js';\nimport { brush, brushSingle } from './graphic.js';\nimport { REDRAW_BIT } from '../graphic/constants.js';\nimport { getSize } from './helper.js';\nvar HOVER_LAYER_ZLEVEL = 1e5;\nvar CANVAS_ZLEVEL = 314159;\nvar EL_AFTER_INCREMENTAL_INC = 0.01;\nvar INCREMENTAL_INC = 0.001;\nfunction isLayerValid(layer) {\n    if (!layer) {\n        return false;\n    }\n    if (layer.__builtin__) {\n        return true;\n    }\n    if (typeof (layer.resize) !== 'function'\n        || typeof (layer.refresh) !== 'function') {\n        return false;\n    }\n    return true;\n}\nfunction createRoot(width, height) {\n    var domRoot = document.createElement('div');\n    domRoot.style.cssText = [\n        'position:relative',\n        'width:' + width + 'px',\n        'height:' + height + 'px',\n        'padding:0',\n        'margin:0',\n        'border-width:0'\n    ].join(';') + ';';\n    return domRoot;\n}\nvar CanvasPainter = (function () {\n    function CanvasPainter(root, storage, opts, id) {\n        this.type = 'canvas';\n        this._zlevelList = [];\n        this._prevDisplayList = [];\n        this._layers = {};\n        this._layerConfig = {};\n        this._needsManuallyCompositing = false;\n        this.type = 'canvas';\n        var singleCanvas = !root.nodeName\n            || root.nodeName.toUpperCase() === 'CANVAS';\n        this._opts = opts = util.extend({}, opts || {});\n        this.dpr = opts.devicePixelRatio || devicePixelRatio;\n        this._singleCanvas = singleCanvas;\n        this.root = root;\n        var rootStyle = root.style;\n        if (rootStyle) {\n            util.disableUserSelect(root);\n            root.innerHTML = '';\n        }\n        this.storage = storage;\n        var zlevelList = this._zlevelList;\n        this._prevDisplayList = [];\n        var layers = this._layers;\n        if (!singleCanvas) {\n            this._width = getSize(root, 0, opts);\n            this._height = getSize(root, 1, opts);\n            var domRoot = this._domRoot = createRoot(this._width, this._height);\n            root.appendChild(domRoot);\n        }\n        else {\n            var rootCanvas = root;\n            var width = rootCanvas.width;\n            var height = rootCanvas.height;\n            if (opts.width != null) {\n                width = opts.width;\n            }\n            if (opts.height != null) {\n                height = opts.height;\n            }\n            this.dpr = opts.devicePixelRatio || 1;\n            rootCanvas.width = width * this.dpr;\n            rootCanvas.height = height * this.dpr;\n            this._width = width;\n            this._height = height;\n            var mainLayer = new Layer(rootCanvas, this, this.dpr);\n            mainLayer.__builtin__ = true;\n            mainLayer.initContext();\n            layers[CANVAS_ZLEVEL] = mainLayer;\n            mainLayer.zlevel = CANVAS_ZLEVEL;\n            zlevelList.push(CANVAS_ZLEVEL);\n            this._domRoot = root;\n        }\n    }\n    CanvasPainter.prototype.getType = function () {\n        return 'canvas';\n    };\n    CanvasPainter.prototype.isSingleCanvas = function () {\n        return this._singleCanvas;\n    };\n    CanvasPainter.prototype.getViewportRoot = function () {\n        return this._domRoot;\n    };\n    CanvasPainter.prototype.getViewportRootOffset = function () {\n        var viewportRoot = this.getViewportRoot();\n        if (viewportRoot) {\n            return {\n                offsetLeft: viewportRoot.offsetLeft || 0,\n                offsetTop: viewportRoot.offsetTop || 0\n            };\n        }\n    };\n    CanvasPainter.prototype.refresh = function (paintAll) {\n        var list = this.storage.getDisplayList(true);\n        var prevList = this._prevDisplayList;\n        var zlevelList = this._zlevelList;\n        this._redrawId = Math.random();\n        this._paintList(list, prevList, paintAll, this._redrawId);\n        for (var i = 0; i < zlevelList.length; i++) {\n            var z = zlevelList[i];\n            var layer = this._layers[z];\n            if (!layer.__builtin__ && layer.refresh) {\n                var clearColor = i === 0 ? this._backgroundColor : null;\n                layer.refresh(clearColor);\n            }\n        }\n        if (this._opts.useDirtyRect) {\n            this._prevDisplayList = list.slice();\n        }\n        return this;\n    };\n    CanvasPainter.prototype.refreshHover = function () {\n        this._paintHoverList(this.storage.getDisplayList(false));\n    };\n    CanvasPainter.prototype._paintHoverList = function (list) {\n        var len = list.length;\n        var hoverLayer = this._hoverlayer;\n        hoverLayer && hoverLayer.clear();\n        if (!len) {\n            return;\n        }\n        var scope = {\n            inHover: true,\n            viewWidth: this._width,\n            viewHeight: this._height\n        };\n        var ctx;\n        for (var i = 0; i < len; i++) {\n            var el = list[i];\n            if (el.__inHover) {\n                if (!hoverLayer) {\n                    hoverLayer = this._hoverlayer = this.getLayer(HOVER_LAYER_ZLEVEL);\n                }\n                if (!ctx) {\n                    ctx = hoverLayer.ctx;\n                    ctx.save();\n                }\n                brush(ctx, el, scope, i === len - 1);\n            }\n        }\n        if (ctx) {\n            ctx.restore();\n        }\n    };\n    CanvasPainter.prototype.getHoverLayer = function () {\n        return this.getLayer(HOVER_LAYER_ZLEVEL);\n    };\n    CanvasPainter.prototype.paintOne = function (ctx, el) {\n        brushSingle(ctx, el);\n    };\n    CanvasPainter.prototype._paintList = function (list, prevList, paintAll, redrawId) {\n        if (this._redrawId !== redrawId) {\n            return;\n        }\n        paintAll = paintAll || false;\n        this._updateLayerStatus(list);\n        var _a = this._doPaintList(list, prevList, paintAll), finished = _a.finished, needsRefreshHover = _a.needsRefreshHover;\n        if (this._needsManuallyCompositing) {\n            this._compositeManually();\n        }\n        if (needsRefreshHover) {\n            this._paintHoverList(list);\n        }\n        if (!finished) {\n            var self_1 = this;\n            requestAnimationFrame(function () {\n                self_1._paintList(list, prevList, paintAll, redrawId);\n            });\n        }\n        else {\n            this.eachLayer(function (layer) {\n                layer.afterBrush && layer.afterBrush();\n            });\n        }\n    };\n    CanvasPainter.prototype._compositeManually = function () {\n        var ctx = this.getLayer(CANVAS_ZLEVEL).ctx;\n        var width = this._domRoot.width;\n        var height = this._domRoot.height;\n        ctx.clearRect(0, 0, width, height);\n        this.eachBuiltinLayer(function (layer) {\n            if (layer.virtual) {\n                ctx.drawImage(layer.dom, 0, 0, width, height);\n            }\n        });\n    };\n    CanvasPainter.prototype._doPaintList = function (list, prevList, paintAll) {\n        var _this = this;\n        var layerList = [];\n        var useDirtyRect = this._opts.useDirtyRect;\n        for (var zi = 0; zi < this._zlevelList.length; zi++) {\n            var zlevel = this._zlevelList[zi];\n            var layer = this._layers[zlevel];\n            if (layer.__builtin__\n                && layer !== this._hoverlayer\n                && (layer.__dirty || paintAll)) {\n                layerList.push(layer);\n            }\n        }\n        var finished = true;\n        var needsRefreshHover = false;\n        var _loop_1 = function (k) {\n            var layer = layerList[k];\n            var ctx = layer.ctx;\n            var repaintRects = useDirtyRect\n                && layer.createRepaintRects(list, prevList, this_1._width, this_1._height);\n            var start = paintAll ? layer.__startIndex : layer.__drawIndex;\n            var useTimer = !paintAll && layer.incremental && Date.now;\n            var startTime = useTimer && Date.now();\n            var clearColor = layer.zlevel === this_1._zlevelList[0]\n                ? this_1._backgroundColor : null;\n            if (layer.__startIndex === layer.__endIndex) {\n                layer.clear(false, clearColor, repaintRects);\n            }\n            else if (start === layer.__startIndex) {\n                var firstEl = list[start];\n                if (!firstEl.incremental || !firstEl.notClear || paintAll) {\n                    layer.clear(false, clearColor, repaintRects);\n                }\n            }\n            if (start === -1) {\n                console.error('For some unknown reason. drawIndex is -1');\n                start = layer.__startIndex;\n            }\n            var i;\n            var repaint = function (repaintRect) {\n                var scope = {\n                    inHover: false,\n                    allClipped: false,\n                    prevEl: null,\n                    viewWidth: _this._width,\n                    viewHeight: _this._height\n                };\n                for (i = start; i < layer.__endIndex; i++) {\n                    var el = list[i];\n                    if (el.__inHover) {\n                        needsRefreshHover = true;\n                    }\n                    _this._doPaintEl(el, layer, useDirtyRect, repaintRect, scope, i === layer.__endIndex - 1);\n                    if (useTimer) {\n                        var dTime = Date.now() - startTime;\n                        if (dTime > 15) {\n                            break;\n                        }\n                    }\n                }\n                if (scope.prevElClipPaths) {\n                    ctx.restore();\n                }\n            };\n            if (repaintRects) {\n                if (repaintRects.length === 0) {\n                    i = layer.__endIndex;\n                }\n                else {\n                    var dpr = this_1.dpr;\n                    for (var r = 0; r < repaintRects.length; ++r) {\n                        var rect = repaintRects[r];\n                        ctx.save();\n                        ctx.beginPath();\n                        ctx.rect(rect.x * dpr, rect.y * dpr, rect.width * dpr, rect.height * dpr);\n                        ctx.clip();\n                        repaint(rect);\n                        ctx.restore();\n                    }\n                }\n            }\n            else {\n                ctx.save();\n                repaint();\n                ctx.restore();\n            }\n            layer.__drawIndex = i;\n            if (layer.__drawIndex < layer.__endIndex) {\n                finished = false;\n            }\n        };\n        var this_1 = this;\n        for (var k = 0; k < layerList.length; k++) {\n            _loop_1(k);\n        }\n        if (env.wxa) {\n            util.each(this._layers, function (layer) {\n                if (layer && layer.ctx && layer.ctx.draw) {\n                    layer.ctx.draw();\n                }\n            });\n        }\n        return {\n            finished: finished,\n            needsRefreshHover: needsRefreshHover\n        };\n    };\n    CanvasPainter.prototype._doPaintEl = function (el, currentLayer, useDirtyRect, repaintRect, scope, isLast) {\n        var ctx = currentLayer.ctx;\n        if (useDirtyRect) {\n            var paintRect = el.getPaintRect();\n            if (!repaintRect || paintRect && paintRect.intersect(repaintRect)) {\n                brush(ctx, el, scope, isLast);\n                el.setPrevPaintRect(paintRect);\n            }\n        }\n        else {\n            brush(ctx, el, scope, isLast);\n        }\n    };\n    CanvasPainter.prototype.getLayer = function (zlevel, virtual) {\n        if (this._singleCanvas && !this._needsManuallyCompositing) {\n            zlevel = CANVAS_ZLEVEL;\n        }\n        var layer = this._layers[zlevel];\n        if (!layer) {\n            layer = new Layer('zr_' + zlevel, this, this.dpr);\n            layer.zlevel = zlevel;\n            layer.__builtin__ = true;\n            if (this._layerConfig[zlevel]) {\n                util.merge(layer, this._layerConfig[zlevel], true);\n            }\n            else if (this._layerConfig[zlevel - EL_AFTER_INCREMENTAL_INC]) {\n                util.merge(layer, this._layerConfig[zlevel - EL_AFTER_INCREMENTAL_INC], true);\n            }\n            if (virtual) {\n                layer.virtual = virtual;\n            }\n            this.insertLayer(zlevel, layer);\n            layer.initContext();\n        }\n        return layer;\n    };\n    CanvasPainter.prototype.insertLayer = function (zlevel, layer) {\n        var layersMap = this._layers;\n        var zlevelList = this._zlevelList;\n        var len = zlevelList.length;\n        var domRoot = this._domRoot;\n        var prevLayer = null;\n        var i = -1;\n        if (layersMap[zlevel]) {\n            if (process.env.NODE_ENV !== 'production') {\n                util.logError('ZLevel ' + zlevel + ' has been used already');\n            }\n            return;\n        }\n        if (!isLayerValid(layer)) {\n            if (process.env.NODE_ENV !== 'production') {\n                util.logError('Layer of zlevel ' + zlevel + ' is not valid');\n            }\n            return;\n        }\n        if (len > 0 && zlevel > zlevelList[0]) {\n            for (i = 0; i < len - 1; i++) {\n                if (zlevelList[i] < zlevel\n                    && zlevelList[i + 1] > zlevel) {\n                    break;\n                }\n            }\n            prevLayer = layersMap[zlevelList[i]];\n        }\n        zlevelList.splice(i + 1, 0, zlevel);\n        layersMap[zlevel] = layer;\n        if (!layer.virtual) {\n            if (prevLayer) {\n                var prevDom = prevLayer.dom;\n                if (prevDom.nextSibling) {\n                    domRoot.insertBefore(layer.dom, prevDom.nextSibling);\n                }\n                else {\n                    domRoot.appendChild(layer.dom);\n                }\n            }\n            else {\n                if (domRoot.firstChild) {\n                    domRoot.insertBefore(layer.dom, domRoot.firstChild);\n                }\n                else {\n                    domRoot.appendChild(layer.dom);\n                }\n            }\n        }\n        layer.__painter = this;\n    };\n    CanvasPainter.prototype.eachLayer = function (cb, context) {\n        var zlevelList = this._zlevelList;\n        for (var i = 0; i < zlevelList.length; i++) {\n            var z = zlevelList[i];\n            cb.call(context, this._layers[z], z);\n        }\n    };\n    CanvasPainter.prototype.eachBuiltinLayer = function (cb, context) {\n        var zlevelList = this._zlevelList;\n        for (var i = 0; i < zlevelList.length; i++) {\n            var z = zlevelList[i];\n            var layer = this._layers[z];\n            if (layer.__builtin__) {\n                cb.call(context, layer, z);\n            }\n        }\n    };\n    CanvasPainter.prototype.eachOtherLayer = function (cb, context) {\n        var zlevelList = this._zlevelList;\n        for (var i = 0; i < zlevelList.length; i++) {\n            var z = zlevelList[i];\n            var layer = this._layers[z];\n            if (!layer.__builtin__) {\n                cb.call(context, layer, z);\n            }\n        }\n    };\n    CanvasPainter.prototype.getLayers = function () {\n        return this._layers;\n    };\n    CanvasPainter.prototype._updateLayerStatus = function (list) {\n        this.eachBuiltinLayer(function (layer, z) {\n            layer.__dirty = layer.__used = false;\n        });\n        function updatePrevLayer(idx) {\n            if (prevLayer) {\n                if (prevLayer.__endIndex !== idx) {\n                    prevLayer.__dirty = true;\n                }\n                prevLayer.__endIndex = idx;\n            }\n        }\n        if (this._singleCanvas) {\n            for (var i_1 = 1; i_1 < list.length; i_1++) {\n                var el = list[i_1];\n                if (el.zlevel !== list[i_1 - 1].zlevel || el.incremental) {\n                    this._needsManuallyCompositing = true;\n                    break;\n                }\n            }\n        }\n        var prevLayer = null;\n        var incrementalLayerCount = 0;\n        var prevZlevel;\n        var i;\n        for (i = 0; i < list.length; i++) {\n            var el = list[i];\n            var zlevel = el.zlevel;\n            var layer = void 0;\n            if (prevZlevel !== zlevel) {\n                prevZlevel = zlevel;\n                incrementalLayerCount = 0;\n            }\n            if (el.incremental) {\n                layer = this.getLayer(zlevel + INCREMENTAL_INC, this._needsManuallyCompositing);\n                layer.incremental = true;\n                incrementalLayerCount = 1;\n            }\n            else {\n                layer = this.getLayer(zlevel + (incrementalLayerCount > 0 ? EL_AFTER_INCREMENTAL_INC : 0), this._needsManuallyCompositing);\n            }\n            if (!layer.__builtin__) {\n                util.logError('ZLevel ' + zlevel + ' has been used by unkown layer ' + layer.id);\n            }\n            if (layer !== prevLayer) {\n                layer.__used = true;\n                if (layer.__startIndex !== i) {\n                    layer.__dirty = true;\n                }\n                layer.__startIndex = i;\n                if (!layer.incremental) {\n                    layer.__drawIndex = i;\n                }\n                else {\n                    layer.__drawIndex = -1;\n                }\n                updatePrevLayer(i);\n                prevLayer = layer;\n            }\n            if ((el.__dirty & REDRAW_BIT) && !el.__inHover) {\n                layer.__dirty = true;\n                if (layer.incremental && layer.__drawIndex < 0) {\n                    layer.__drawIndex = i;\n                }\n            }\n        }\n        updatePrevLayer(i);\n        this.eachBuiltinLayer(function (layer, z) {\n            if (!layer.__used && layer.getElementCount() > 0) {\n                layer.__dirty = true;\n                layer.__startIndex = layer.__endIndex = layer.__drawIndex = 0;\n            }\n            if (layer.__dirty && layer.__drawIndex < 0) {\n                layer.__drawIndex = layer.__startIndex;\n            }\n        });\n    };\n    CanvasPainter.prototype.clear = function () {\n        this.eachBuiltinLayer(this._clearLayer);\n        return this;\n    };\n    CanvasPainter.prototype._clearLayer = function (layer) {\n        layer.clear();\n    };\n    CanvasPainter.prototype.setBackgroundColor = function (backgroundColor) {\n        this._backgroundColor = backgroundColor;\n        util.each(this._layers, function (layer) {\n            layer.setUnpainted();\n        });\n    };\n    CanvasPainter.prototype.configLayer = function (zlevel, config) {\n        if (config) {\n            var layerConfig = this._layerConfig;\n            if (!layerConfig[zlevel]) {\n                layerConfig[zlevel] = config;\n            }\n            else {\n                util.merge(layerConfig[zlevel], config, true);\n            }\n            for (var i = 0; i < this._zlevelList.length; i++) {\n                var _zlevel = this._zlevelList[i];\n                if (_zlevel === zlevel || _zlevel === zlevel + EL_AFTER_INCREMENTAL_INC) {\n                    var layer = this._layers[_zlevel];\n                    util.merge(layer, layerConfig[zlevel], true);\n                }\n            }\n        }\n    };\n    CanvasPainter.prototype.delLayer = function (zlevel) {\n        var layers = this._layers;\n        var zlevelList = this._zlevelList;\n        var layer = layers[zlevel];\n        if (!layer) {\n            return;\n        }\n        layer.dom.parentNode.removeChild(layer.dom);\n        delete layers[zlevel];\n        zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n    };\n    CanvasPainter.prototype.resize = function (width, height) {\n        if (!this._domRoot.style) {\n            if (width == null || height == null) {\n                return;\n            }\n            this._width = width;\n            this._height = height;\n            this.getLayer(CANVAS_ZLEVEL).resize(width, height);\n        }\n        else {\n            var domRoot = this._domRoot;\n            domRoot.style.display = 'none';\n            var opts = this._opts;\n            var root = this.root;\n            width != null && (opts.width = width);\n            height != null && (opts.height = height);\n            width = getSize(root, 0, opts);\n            height = getSize(root, 1, opts);\n            domRoot.style.display = '';\n            if (this._width !== width || height !== this._height) {\n                domRoot.style.width = width + 'px';\n                domRoot.style.height = height + 'px';\n                for (var id in this._layers) {\n                    if (this._layers.hasOwnProperty(id)) {\n                        this._layers[id].resize(width, height);\n                    }\n                }\n                this.refresh(true);\n            }\n            this._width = width;\n            this._height = height;\n        }\n        return this;\n    };\n    CanvasPainter.prototype.clearLayer = function (zlevel) {\n        var layer = this._layers[zlevel];\n        if (layer) {\n            layer.clear();\n        }\n    };\n    CanvasPainter.prototype.dispose = function () {\n        this.root.innerHTML = '';\n        this.root =\n            this.storage =\n                this._domRoot =\n                    this._layers = null;\n    };\n    CanvasPainter.prototype.getRenderedCanvas = function (opts) {\n        opts = opts || {};\n        if (this._singleCanvas && !this._compositeManually) {\n            return this._layers[CANVAS_ZLEVEL].dom;\n        }\n        var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n        imageLayer.initContext();\n        imageLayer.clear(false, opts.backgroundColor || this._backgroundColor);\n        var ctx = imageLayer.ctx;\n        if (opts.pixelRatio <= this.dpr) {\n            this.refresh();\n            var width_1 = imageLayer.dom.width;\n            var height_1 = imageLayer.dom.height;\n            this.eachLayer(function (layer) {\n                if (layer.__builtin__) {\n                    ctx.drawImage(layer.dom, 0, 0, width_1, height_1);\n                }\n                else if (layer.renderToCanvas) {\n                    ctx.save();\n                    layer.renderToCanvas(ctx);\n                    ctx.restore();\n                }\n            });\n        }\n        else {\n            var scope = {\n                inHover: false,\n                viewWidth: this._width,\n                viewHeight: this._height\n            };\n            var displayList = this.storage.getDisplayList(true);\n            for (var i = 0, len = displayList.length; i < len; i++) {\n                var el = displayList[i];\n                brush(ctx, el, scope, i === len - 1);\n            }\n        }\n        return imageLayer.dom;\n    };\n    CanvasPainter.prototype.getWidth = function () {\n        return this._width;\n    };\n    CanvasPainter.prototype.getHeight = function () {\n        return this._height;\n    };\n    return CanvasPainter;\n}());\nexport default CanvasPainter;\n;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}