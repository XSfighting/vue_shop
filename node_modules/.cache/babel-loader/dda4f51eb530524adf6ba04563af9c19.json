{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data() {\n    return {\n      // 查询参数对象\n      queryInfo: {\n        query: '',\n        pagenum: 1,\n        pagesize: 10\n      },\n      // 商品列表\n      goodslist: [],\n      // 总数据条数\n      total: 0\n    };\n  },\n\n  created() {\n    this.getGoodsList();\n  },\n\n  methods: {\n    // 根据分页获取对应的商品列表\n    async getGoodsList() {\n      const {\n        data: res\n      } = await this.$http.get('goods', {\n        params: this.queryInfo\n      });\n\n      if (res.meta.status !== 200) {\n        return this.$message.error('获取商品列表失败！');\n      }\n\n      this.$message.success('获取商品列表成功！'); // console.log(res.data)\n\n      this.goodslist = res.data.goods;\n      this.total = res.data.total;\n    },\n\n    handleSizeChange(newSize) {\n      this.queryInfo.pagesize = newSize;\n      this.getGoodsList();\n    },\n\n    handleCurrentChange(newPage) {\n      this.queryInfo.pagenum = newPage;\n      this.getGoodsList();\n    },\n\n    async removeById(id) {\n      const confirmResult = await this.$confirm('此操作将永久删除该商品, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).catch(err => err);\n\n      if (confirmResult !== 'confirm') {\n        return this.$message.info('已经取消删除！');\n      }\n\n      const {\n        data: res\n      } = await this.$http.delete(`goods/${id}`);\n\n      if (res.meta.status !== 200) {\n        return this.$message.error('删除失败！');\n      }\n\n      this.$message.success('删除成功！');\n      this.getGoodsList();\n    },\n\n    goAddpage() {\n      this.$router.push('/goods/add');\n    }\n\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiDA;EACAA;IACA;MACA;MACAC;QACAC,SADA;QAEAC,UAFA;QAGAC;MAHA,CAFA;MAOA;MACAC,aARA;MASA;MACAC;IAVA;EAYA,CAdA;;EAeAC;IACA;EACA,CAjBA;;EAkBAC;IACA;IACA;MACA;QAAAR;MAAA;QACAS;MADA;;MAIA;QACA;MACA;;MAEA,mCATA,CAUA;;MACA;MACA;IACA,CAfA;;IAgBAC;MACA;MACA;IACA,CAnBA;;IAoBAC;MACA;MACA;IACA,CAvBA;;IAwBA;MACA,0CACA,oBADA,EAEA,IAFA,EAGA;QACAC,uBADA;QAEAC,sBAFA;QAGAC;MAHA,CAHA,EAQAC,KARA,CAQAC,UARA;;MAUA;QACA;MACA;;MACA;QAAAhB;MAAA;;MAEA;QACA;MACA;;MACA;MACA;IACA,CA7CA;;IA8CAiB;MACA;IACA;;EAhDA;AAlBA","names":["data","queryInfo","query","pagenum","pagesize","goodslist","total","created","methods","params","handleSizeChange","handleCurrentChange","confirmButtonText","cancelButtonText","type","catch","err","goAddpage"],"sourceRoot":"src/components/goods","sources":["List.vue"],"sourcesContent":["<template>\n  <div>\n    <!-- 面包屑导航区域 -->\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\n      <el-breadcrumb-item>商品管理</el-breadcrumb-item>\n      <el-breadcrumb-item>商品列表</el-breadcrumb-item>\n    </el-breadcrumb>\n\n    <!-- 卡片视图区域 -->\n    <el-card>\n      <el-row :gutter=\"20\">\n        <el-col :span=\"8\">\n          <el-input placeholder=\"请输入内容\" v-model=\"queryInfo.query\" clearable @clear=\"getGoodsList\">\n            <el-button slot=\"append\" icon=\"el-icon-search\" @click=\"getGoodsList\"></el-button>\n          </el-input>\n        </el-col>\n        <el-col :span=\"4\">\n          <el-button type=\"primary\" @click=\"goAddpage\">添加商品</el-button>\n        </el-col>\n      </el-row>\n\n      <!-- table表格区域 -->\n      <el-table :data=\"goodslist\" border stripe>\n        <el-table-column type=\"index\"></el-table-column>\n        <el-table-column label=\"商品名称\" prop=\"goods_name\"></el-table-column>\n        <el-table-column label=\"商品价格(元)\" prop=\"goods_price\" width=\"95px\"></el-table-column>\n        <el-table-column label=\"商品重量\" prop=\"goods_weight\" width=\"70px\"></el-table-column>\n        <el-table-column label=\"创建时间\" prop=\"add_time\" width=\"140px\">\n          <template v-slot=\"scope\">\n            {{scope.row.add_time | dateFormat}}\n          </template>\n        </el-table-column>\n        <el-table-column label=\"操作\" width=\"130px\">\n          <template slot-scope=\"scope\">\n            <el-button type=\"primary\" icon=\"el-icon-edit\" size=\"mini\" @click=\"showEditDialogue\"></el-button>\n            <el-button type=\"danger\" icon=\"el-icon-delete\" size=\"mini\" @click=\"removeById(scope.row.goods_id)\"></el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n\n      <!-- 分页区域 -->\n      <el-pagination @size-change=\"handleSizeChange\" @current-change=\"handleCurrentChange\" :current-page=\"queryInfo.pagenum\" :page-sizes=\"[5, 10, 15, 20]\" :page-size=\"queryInfo.pagesize\" layout=\"total, sizes, prev, pager, next, jumper\" :total=\"total\" background>\n      </el-pagination>\n    </el-card>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      // 查询参数对象\n      queryInfo: {\n        query: '',\n        pagenum: 1,\n        pagesize: 10\n      },\n      // 商品列表\n      goodslist: [],\n      // 总数据条数\n      total: 0\n    }\n  },\n  created() {\n    this.getGoodsList()\n  },\n  methods: {\n    // 根据分页获取对应的商品列表\n    async getGoodsList() {\n      const { data: res } = await this.$http.get('goods', {\n        params: this.queryInfo\n      })\n\n      if (res.meta.status !== 200) {\n        return this.$message.error('获取商品列表失败！')\n      }\n\n      this.$message.success('获取商品列表成功！')\n      // console.log(res.data)\n      this.goodslist = res.data.goods\n      this.total = res.data.total\n    },\n    handleSizeChange(newSize) {\n      this.queryInfo.pagesize = newSize\n      this.getGoodsList()\n    },\n    handleCurrentChange(newPage) {\n      this.queryInfo.pagenum = newPage\n      this.getGoodsList()\n    },\n    async removeById(id) {\n      const confirmResult = await this.$confirm(\n          '此操作将永久删除该商品, 是否继续?',\n          '提示',\n          {\n            confirmButtonText: '确定',\n            cancelButtonText: '取消',\n            type: 'warning'\n          }\n      ).catch(err => err)\n\n      if (confirmResult !== 'confirm') {\n        return this.$message.info('已经取消删除！')\n      }\n      const { data: res } = await this.$http.delete(`goods/${id}`)\n\n      if (res.meta.status !== 200) {\n        return this.$message.error('删除失败！')\n      }\n      this.$message.success('删除成功！')\n      this.getGoodsList()\n    },\n    goAddpage() {\n      this.$router.push('/goods/add')\n    },\n  }\n}\n</script>\n\n<style scoped>\n</style>"]},"metadata":{},"sourceType":"module"}